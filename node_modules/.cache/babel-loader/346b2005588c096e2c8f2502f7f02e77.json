{"ast":null,"code":"const {\n  BufferList\n} = require(\"bl\");\n\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\"\n});\n\nconst fetchMetadata = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    if (!file.content) continue;\n    const content = new BufferList();\n\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n\n    return content;\n  }\n};\n\nexport default fetchMetadata;","map":{"version":3,"sources":["/home/madhav/Documents/freelancers/app/packages/react-app/src/data/fetchMetadata.js"],"names":["BufferList","require","ipfsAPI","ipfs","host","port","protocol","fetchMetadata","hashToGet","file","get","content","chunk","append"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,OAAO,CAAC,IAAD,CAA9B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;AAEA,MAAME,IAAI,GAAGD,OAAO,CAAC;AAAEE,EAAAA,IAAI,EAAE,gBAAR;AAA0BC,EAAAA,IAAI,EAAE,MAAhC;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAAD,CAApB;;AAEA,MAAMC,aAAa,GAAG,MAAMC,SAAN,IAAmB;AACvC,aAAW,MAAMC,IAAjB,IAAyBN,IAAI,CAACO,GAAL,CAASF,SAAT,CAAzB,EAA8C;AAC5C,QAAI,CAACC,IAAI,CAACE,OAAV,EAAmB;AACnB,UAAMA,OAAO,GAAG,IAAIX,UAAJ,EAAhB;;AACA,eAAW,MAAMY,KAAjB,IAA0BH,IAAI,CAACE,OAA/B,EAAwC;AACtCA,MAAAA,OAAO,CAACE,MAAR,CAAeD,KAAf;AACD;;AACD,WAAOD,OAAP;AACD;AACF,CATD;;AAWA,eAAeJ,aAAf","sourcesContent":["const { BufferList } = require(\"bl\");\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n\nconst fetchMetadata = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    if (!file.content) continue;\n    const content = new BufferList();\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n    return content;\n  }\n};\n\nexport default fetchMetadata;\n"]},"metadata":{},"sourceType":"module"}