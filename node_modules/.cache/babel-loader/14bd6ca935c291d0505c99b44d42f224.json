{"ast":null,"code":"import _regeneratorRuntime from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Input}from\"antd\";import React,{useEffect,useState}from\"react\";// small change in useEffect, display currentValue if it's provided by user\n/*\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n*/export default function EtherInput(props){var _useState=useState(props.price?\"USD\":\"ETH\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),display=_useState4[0],setDisplay=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),value=_useState6[0],setValue=_useState6[1];var currentValue=typeof props.value!==\"undefined\"?props.value:value;var option=function option(title){if(!props.price)return\"\";return/*#__PURE__*/React.createElement(\"div\",{style:{cursor:\"pointer\"},onClick:function onClick(){if(mode===\"USD\"){setMode(\"ETH\");setDisplay(currentValue);}else{setMode(\"USD\");if(currentValue){var usdValue=\"\"+(parseFloat(currentValue)*props.price).toFixed(2);setDisplay(usdValue);}else{setDisplay(currentValue);}}}},title);};var prefix;var addonAfter;if(mode===\"USD\"){prefix=\"$\";addonAfter=option(\"USD ðŸ”€\");}else{prefix=\"Îž\";addonAfter=option(\"ETH ðŸ”€\");}useEffect(function(){if(!currentValue){setDisplay(\"\");}},[currentValue]);return/*#__PURE__*/React.createElement(Input,{placeholder:props.placeholder?props.placeholder:\"amount in \"+mode,autoFocus:props.autoFocus,prefix:prefix,value:display,addonAfter:addonAfter,onChange:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newValue,possibleNewValue,ethValue;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newValue=e.target.value;if(mode===\"USD\"){possibleNewValue=parseFloat(newValue);if(possibleNewValue){ethValue=possibleNewValue/props.price;setValue(ethValue);if(typeof props.onChange===\"function\"){props.onChange(ethValue);}setDisplay(newValue);}else{setDisplay(newValue);}}else{setValue(newValue);if(typeof props.onChange===\"function\"){props.onChange(newValue);}setDisplay(newValue);}case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()});}","map":null,"metadata":{},"sourceType":"module"}