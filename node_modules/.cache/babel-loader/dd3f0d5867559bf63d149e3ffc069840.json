{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _asyncGeneratorDelegate = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nvar errCode = require('err-code');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar blobToIt = require('blob-to-it');\n\nvar itPeekable = require('it-peekable');\n\nvar all = require('it-all');\n\nvar map = require('it-map');\n\nvar _require2 = require('./utils'),\n    isBytes = _require2.isBytes,\n    isBlob = _require2.isBlob;\n\nfunction toAsyncIterable(_x) {\n  return _toAsyncIterable.apply(this, arguments);\n}\n\nfunction _toAsyncIterable() {\n  _toAsyncIterable = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input) {\n    var peekable, _yield$_awaitAsyncGen, value, done;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(isBytes(input) || typeof input === 'string' || input instanceof String)) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return toBuffer(input);\n\n          case 3:\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (!isBlob(input)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(blobToIt(input)), _awaitAsyncGenerator), \"t0\", 6);\n\n          case 6:\n            return _context.abrupt(\"return\");\n\n          case 7:\n            // Browser stream\n            if (typeof input.getReader === 'function') {\n              input = browserStreamToIt(input);\n            } // (Async)Iterator<?>\n\n\n            if (!(input[Symbol.iterator] || input[Symbol.asyncIterator])) {\n              _context.next = 30;\n              break;\n            }\n\n            peekable = itPeekable(input);\n            _context.next = 12;\n            return _awaitAsyncGenerator(peekable.peek());\n\n          case 12:\n            _yield$_awaitAsyncGen = _context.sent;\n            value = _yield$_awaitAsyncGen.value;\n            done = _yield$_awaitAsyncGen.done;\n\n            if (!done) {\n              _context.next = 18;\n              break;\n            }\n\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(peekable), _awaitAsyncGenerator), \"t1\", 17);\n\n          case 17:\n            return _context.abrupt(\"return\");\n\n          case 18:\n            peekable.push(value); // (Async)Iterable<Number>\n\n            if (!Number.isInteger(value)) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.t2 = toBuffer;\n            _context.next = 23;\n            return _awaitAsyncGenerator(all(peekable));\n\n          case 23:\n            _context.t3 = _context.sent;\n            _context.next = 26;\n            return (0, _context.t2)(_context.t3);\n\n          case 26:\n            return _context.abrupt(\"return\");\n\n          case 27:\n            if (!(isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context.next = 30;\n              break;\n            }\n\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(map(peekable, function (chunk) {\n              return toBuffer(chunk);\n            })), _awaitAsyncGenerator), \"t4\", 29);\n\n          case 29:\n            return _context.abrupt(\"return\");\n\n          case 30:\n            throw errCode(new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _toAsyncIterable.apply(this, arguments);\n}\n\nfunction toBuffer(chunk) {\n  return isBytes(chunk) ? chunk : Buffer.from(chunk);\n}\n\nmodule.exports = toAsyncIterable;","map":null,"metadata":{},"sourceType":"script"}