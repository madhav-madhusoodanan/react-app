{"ast":null,"code":"var _jsxFileName = \"/home/madhav/Documents/freelancers/app/packages/react-app/src/components/Wallet.jsx\";\nimport { SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Tooltip } from \"antd\";\nimport { ethers } from \"ethers\";\nimport React, { useState } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport EtherInput from \"./EtherInput\";\nexport default function Wallet(props) {\n  var _props$price;\n\n  const [open, setOpen] = useState();\n  const [amount, setAmount] = useState();\n\n  const useOpenWallet = () => {\n    setOpen(!open);\n  };\n\n  const providerSend = /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WalletOutlined, {\n    onClick: useOpenWallet,\n    rotate: -90,\n    style: {\n      padding: 7,\n      cursor: \"pointer\",\n      fontSize: 28,\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n  const display = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EtherInput, {\n    price: (_props$price = props.price) !== null && _props$price !== void 0 ? _props$price : 1,\n    value: amount,\n    onChange: value => {\n      setAmount(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n\n  const useSend = async () => {\n    const tx = Transactor(props.provider);\n    let value;\n\n    try {\n      value = ethers.utils.parseEther(\"\" + amount);\n    } catch (e) {\n      // failed to parseEther, try something else\n      value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n    }\n\n    tx({\n      to: props.toAddress,\n      value\n    });\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"absolute bottom-0 left-0 z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, providerSend, /*#__PURE__*/React.createElement(Modal, {\n    visible: open,\n    onOk: () => {\n      setOpen(!open);\n    },\n    onCancel: () => {\n      setOpen(!open);\n    },\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      disabled: !amount,\n      loading: false,\n      onClick: useSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SendOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), \" Send\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, display));\n}","map":{"version":3,"sources":["/home/madhav/Documents/freelancers/app/packages/react-app/src/components/Wallet.jsx"],"names":["SendOutlined","WalletOutlined","Button","Modal","Tooltip","ethers","React","useState","Transactor","EtherInput","Wallet","props","open","setOpen","amount","setAmount","useOpenWallet","providerSend","padding","cursor","fontSize","verticalAlign","display","price","value","useSend","tx","provider","utils","parseEther","e","parseFloat","toFixed","to","toAddress"],"mappings":"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","sourcesContent":["import { SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Tooltip } from \"antd\";\nimport { ethers } from \"ethers\";\nimport React, { useState } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport EtherInput from \"./EtherInput\";\n\nexport default function Wallet(props) {\n  const [open, setOpen] = useState();\n  const [amount, setAmount] = useState();\n\n  const useOpenWallet = () => {\n    setOpen(!open);\n  };\n\n  const providerSend = (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={useOpenWallet}\n        rotate={-90}\n        style={{\n          padding: 7,\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  );\n\n  const display = (\n    <div>\n      <div>\n        <EtherInput\n          price={props.price ?? 1}\n          value={amount}\n          onChange={value => {\n            setAmount(value);\n          }}\n        />\n      </div>\n    </div>\n  );\n\n  const useSend = async () => {\n    const tx = Transactor(props.provider);\n    let value;\n    try {\n      value = ethers.utils.parseEther(\"\" + amount);\n    } catch (e) {\n      // failed to parseEther, try something else\n      value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n    }\n\n    tx({\n      to: props.toAddress,\n      value,\n    });\n    setOpen(!open);\n  };\n\n  return (\n    <span className=\"absolute bottom-0 left-0 z-10\">\n      {providerSend}\n      <Modal\n        visible={open}\n        onOk={() => {\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setOpen(!open);\n        }}\n        footer={[\n          <Button key=\"submit\" type=\"primary\" disabled={!amount} loading={false} onClick={useSend}>\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}