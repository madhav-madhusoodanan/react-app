{"ast":null,"code":"import _regeneratorRuntime from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from\"react\";import{ethers}from\"ethers\";import{Link}from\"react-router-dom\";import{toast}from\"react-toastify\";import{useContractLoader,useAppSelector,useAppDispatch,useUserSigner}from\"../hooks\";import{PlotMap,ProgressBar,PlotDetail,LogoDisplay,Header}from\"../components\";import{setPlots}from\"../actions\";import{PlotTabs}from\"../components\";import{logoutOfWeb3Modal}from\"../helpers\";import{fetchedPlots,setCommunalLand,setParcelGeojson}from\"../actions/plotsSlice\";import{fetchMetadata}from\"../data\";import updatePlots from\"../helpers/UpdatePlots\";import{setWhitelistedAmount}from\"../actions/userSlice\";export default function BrowsePlots(_ref){var networkProvider=_ref.networkProvider,web3Modal=_ref.web3Modal;var dispatch=useAppDispatch();var DEBUG=useAppSelector(function(state){return state.debug.debug;});var plots=useAppSelector(function(state){return state.plots.plots;});var activePlot=useAppSelector(function(state){return state.plots.activePlot;});var parcel=useAppSelector(function(state){return state.plots.parcel;});var userAddress=useAppSelector(function(state){return state.user.address;});var contracts=useContractLoader(networkProvider);var whitelistedAmount=useAppSelector(function(state){return state.user.whitelistedAmount;});var _useState=useState(),_useState2=_slicedToArray(_useState,2),injectedProvider=_useState2[0],setInjectedProvider=_useState2[1];useUserSigner(injectedProvider);// initialize signer\nuseEffect(function(){if(!userAddress){return;}if(whitelistedAmount&&whitelistedAmount>0){toast.dismiss(\"notWhitelisted\");toast.success(\"You've been whitelisted to buy \".concat(whitelistedAmount,\" plots \\uD83C\\uDF89\"),{toastId:\"isWhitelisted\",autoClose:false});}else{toast.dismiss(\"isWhitelisted\");toast.error(\"You aren't whitelisted to buy any plots yet ðŸ˜¢\",{toastId:\"notWhitelisted\",autoClose:false});}},[whitelistedAmount,userAddress]);var loadWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return web3Modal.connect();case 3:provider=_context.sent;setInjectedProvider(new ethers.providers.Web3Provider(provider));provider.on(\"chainChanged\",function(chainId){DEBUG&&console.log(\"chain changed to \".concat(chainId,\"! updating providers\"));setInjectedProvider(new ethers.providers.Web3Provider(provider));});provider.on(\"accountsChanged\",function(){DEBUG&&console.log(\"account changed!\");setInjectedProvider(new ethers.providers.Web3Provider(provider));});// Subscribe to session disconnection\nprovider.on(\"disconnect\",function(code,reason){DEBUG&&console.log(code,reason);logoutOfWeb3Modal(web3Modal);});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);toast.error(\"Error connecting to a wallet\");case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);})),[setInjectedProvider,DEBUG]);var readParcel=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var parcelUri,parcelManifestBuffer,parcelMetadata,communalUri,communalManifestBuffer,communalMetadata;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!(contracts&&contracts.CityDaoParcel)){_context2.next=18;break;}_context2.next=4;return contracts.CityDaoParcel.getParcelMetadataUri();case 4:parcelUri=_context2.sent;_context2.next=7;return fetchMetadata(parcelUri);case 7:parcelManifestBuffer=_context2.sent;parcelMetadata=JSON.parse(parcelManifestBuffer.toString());dispatch(setParcelGeojson(parcelMetadata.plots[0]));_context2.next=12;return contracts.CityDaoParcel.getCommunalLandMetadataUri();case 12:communalUri=_context2.sent;_context2.next=15;return fetchMetadata(communalUri);case 15:communalManifestBuffer=_context2.sent;communalMetadata=JSON.parse(communalManifestBuffer.toString());dispatch(setCommunalLand(communalMetadata.features));case 18:_context2.next=24;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](0);toast.error(\"Failed to find parcel. Make sure you're on the \".concat(process.env.REACT_APP_NETWORK,\" network.\"),{className:\"error\",toastId:\"contract-fail\"});DEBUG&&console.log(_context2.t0);case 24:case\"end\":return _context2.stop();}}},_callee2,null,[[0,20]]);}));return function readParcel(){return _ref3.apply(this,arguments);};}();useEffect(function(){readParcel();},[contracts]);var readWhitelistStatus=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _whitelistedAmount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(!(contracts&&contracts.CityDaoParcel&&userAddress)){_context3.next=6;break;}_context3.next=4;return contracts.CityDaoParcel.getWhitelistedAmount(userAddress);case 4:_whitelistedAmount=_context3.sent;dispatch(setWhitelistedAmount(_whitelistedAmount.toNumber()));case 6:_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);dispatch(setWhitelistedAmount(0));case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function readWhitelistStatus(){return _ref4.apply(this,arguments);};}();useEffect(function(){readWhitelistStatus();},[contracts,userAddress,plots]);updatePlots(contracts,plots,DEBUG).then(function(newPlots){if(newPlots.length!==plots.length){dispatch(setPlots(newPlots));dispatch(fetchedPlots());}});return/*#__PURE__*/React.createElement(\"div\",{className:\"browse-plots-wrapper\"},/*#__PURE__*/React.createElement(ProgressBar,null),/*#__PURE__*/React.createElement(Link,{to:\"/whitelist\",className:\"logo-link\"},/*#__PURE__*/React.createElement(LogoDisplay,null)),activePlot!==undefined?/*#__PURE__*/React.createElement(PlotDetail,{plot:activePlot,contracts:contracts,injectedProvider:injectedProvider}):/*#__PURE__*/React.createElement(PlotTabs,null),/*#__PURE__*/React.createElement(Header,{connectWallet:loadWeb3Modal}),/*#__PURE__*/React.createElement(PlotMap,{key:plots.length,parcel:parcel,plots:plots,startingCoordinates:[-109.25689639464197,44.922331600075466],startingZoom:15.825123438299038,startingPitch:20}));}","map":null,"metadata":{},"sourceType":"module"}