{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useState, useEffect } from \"react\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\nvar useResolveEnsName = function useResolveEnsName(provider, ensName) {\n  var _a = __read(useState(AddressZero), 2),\n      address = _a[0],\n      setAddress = _a[1];\n\n  useEffect(function () {\n    if (provider) {\n      provider.resolveName(ensName).then(function (resolvedAddress) {\n        return setAddress(resolvedAddress);\n      });\n    }\n  }, [provider, ensName]);\n  return address;\n};\n\nexport default useResolveEnsName;","map":null,"metadata":{},"sourceType":"module"}