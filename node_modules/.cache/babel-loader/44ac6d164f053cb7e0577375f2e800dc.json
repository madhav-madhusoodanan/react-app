{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar env_1 = require(\"./lib/env\");\n\nvar browser_1 = require(\"./lib/browser\");\n\nvar node_1 = require(\"./lib/node\");\n\nvar fallback_1 = require(\"./lib/fallback\");\n\nfunction aesCbcEncrypt(iv, key, data) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!env_1.isBrowser()) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return browser_1.browserAesEncrypt(iv, key, data);\n\n          case 3:\n            result = _context.sent;\n            _context.next = 7;\n            break;\n\n          case 6:\n            if (env_1.isNode()) {\n              result = node_1.nodeAesEncrypt(iv, key, data);\n            } else {\n              result = fallback_1.fallbackAesEncrypt(iv, key, data);\n            }\n\n          case 7:\n            return _context.abrupt(\"return\", result);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexports.aesCbcEncrypt = aesCbcEncrypt;\n\nfunction aesCbcDecrypt(iv, key, data) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!env_1.isBrowser()) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 3;\n            return browser_1.browserAesDecrypt(iv, key, data);\n\n          case 3:\n            result = _context2.sent;\n            _context2.next = 7;\n            break;\n\n          case 6:\n            if (env_1.isNode()) {\n              result = node_1.nodeAesDecrypt(iv, key, data);\n            } else {\n              result = fallback_1.fallbackAesDecrypt(iv, key, data);\n            }\n\n          case 7:\n            return _context2.abrupt(\"return\", result);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\n\nexports.aesCbcDecrypt = aesCbcDecrypt;\n\nfunction aesCbcEncryptSync(iv, key, data) {\n  var result;\n\n  if (env_1.isNode()) {\n    result = node_1.nodeAesEncrypt(iv, key, data);\n  } else {\n    result = fallback_1.fallbackAesEncrypt(iv, key, data);\n  }\n\n  return result;\n}\n\nexports.aesCbcEncryptSync = aesCbcEncryptSync;\n\nfunction aesCbcDecryptSync(iv, key, data) {\n  var result;\n\n  if (env_1.isNode()) {\n    result = node_1.nodeAesDecrypt(iv, key, data);\n  } else {\n    result = fallback_1.fallbackAesDecrypt(iv, key, data);\n  }\n\n  return result;\n}\n\nexports.aesCbcDecryptSync = aesCbcDecryptSync;","map":null,"metadata":{},"sourceType":"script"}