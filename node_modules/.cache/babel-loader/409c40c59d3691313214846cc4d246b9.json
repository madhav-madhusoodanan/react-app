{"ast":null,"code":"var _jsxFileName = \"/home/madhav/Documents/freelancers/app/packages/react-app/src/components/PlotList.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport PlotButton from \"./PlotButton\";\nimport { motion } from \"framer-motion\";\nimport { useAppSelector } from \"../hooks\";\nexport default function PlotList({\n  plots,\n  emptyMessage\n}) {\n  const idFilter = useAppSelector(state => state.plots.idFilter);\n  const [displayedPlots, setDisplayedPlots] = useState(plots);\n  const [numDisplayedPlots, setNumDisplayedPlots] = useState(10);\n  useEffect(() => {\n    setDisplayedPlots(plots.slice(0, numDisplayedPlots));\n  }, [plots, numDisplayedPlots]);\n  useEffect(() => {\n    setNumDisplayedPlots(10);\n  }, [idFilter]);\n\n  const increaseNumDisplayedPlots = () => {\n    setNumDisplayedPlots(numDisplayedPlots + 10);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, displayedPlots.map((plot, idx) => /*#__PURE__*/React.createElement(motion.div, {\n    className: \"list-item\",\n    key: plot.id,\n    layout: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlotButton, {\n    plot: plot,\n    delay: idx % 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }))), plots.length > displayedPlots.length && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: increaseNumDisplayedPlots,\n    className: \"text-gray-7 third-font cursor-pointer my-4 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Show more\"), plots.length === 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-7 third-font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }\n  }, emptyMessage));\n}","map":{"version":3,"sources":["/home/madhav/Documents/freelancers/app/packages/react-app/src/components/PlotList.tsx"],"names":["React","useEffect","useState","PlotButton","motion","useAppSelector","PlotList","plots","emptyMessage","idFilter","state","displayedPlots","setDisplayedPlots","numDisplayedPlots","setNumDisplayedPlots","slice","increaseNumDisplayedPlots","map","plot","idx","id","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAOA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAlB,EAAkD;AAC/D,QAAMC,QAAQ,GAAGJ,cAAc,CAAEK,KAAD,IAAsBA,KAAK,CAACH,KAAN,CAAYE,QAAnC,CAA/B;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAACK,KAAD,CAApD;AACA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,EAAD,CAA1D;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,iBAAiB,CAACL,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeF,iBAAf,CAAD,CAAjB;AACD,GAFQ,EAEN,CAACN,KAAD,EAAQM,iBAAR,CAFM,CAAT;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACD,GAFQ,EAEN,CAACL,QAAD,CAFM,CAAT;;AAIA,QAAMO,yBAAyB,GAAG,MAAM;AACtCF,IAAAA,oBAAoB,CAACD,iBAAiB,GAAG,EAArB,CAApB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,cAAc,CAACM,GAAf,CAAmB,CAACC,IAAD,EAAaC,GAAb,kBAClB,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAkC,IAAA,GAAG,EAAED,IAAI,CAACE,EAA5C;AAAgD,IAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAwB,IAAA,KAAK,EAAEC,GAAG,GAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CADH,EAOGZ,KAAK,CAACc,MAAN,GAAeV,cAAc,CAACU,MAA9B,iBACC;AAAM,IAAA,OAAO,EAAEL,yBAAf;AAA0C,IAAA,SAAS,EAAC,iDAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,EAYGT,KAAK,CAACc,MAAN,KAAiB,CAAjB,iBAAsB;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Cb,YAA1C,CAZzB,CADF;AAgBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Plot } from \"../models/Plot\";\nimport PlotButton from \"./PlotButton\";\nimport { motion } from \"framer-motion\";\nimport { RootState } from \"../store\";\nimport { useAppSelector } from \"../hooks\";\n\ninterface Props {\n  plots: Plot[];\n  emptyMessage: string;\n}\n\nexport default function PlotList({ plots, emptyMessage }: Props) {\n  const idFilter = useAppSelector((state: RootState) => state.plots.idFilter);\n  const [displayedPlots, setDisplayedPlots] = useState(plots);\n  const [numDisplayedPlots, setNumDisplayedPlots] = useState(10);\n  useEffect(() => {\n    setDisplayedPlots(plots.slice(0, numDisplayedPlots));\n  }, [plots, numDisplayedPlots]);\n  useEffect(() => {\n    setNumDisplayedPlots(10);\n  }, [idFilter]);\n\n  const increaseNumDisplayedPlots = () => {\n    setNumDisplayedPlots(numDisplayedPlots + 10);\n  };\n\n  return (\n    <div className=\"list block\">\n      {displayedPlots.map((plot: Plot, idx: number) => (\n        <motion.div className=\"list-item\" key={plot.id} layout>\n          {/* modulo delay by 10 because plot buttons are added in batches of 10 */}\n          <PlotButton plot={plot} delay={idx % 10} />\n        </motion.div>\n      ))}\n      {plots.length > displayedPlots.length && (\n        <span onClick={increaseNumDisplayedPlots} className=\"text-gray-7 third-font cursor-pointer my-4 pb-4\">\n          Show more\n        </span>\n      )}\n      {plots.length === 0 && <span className=\"text-gray-7 third-font\">{emptyMessage}</span>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}