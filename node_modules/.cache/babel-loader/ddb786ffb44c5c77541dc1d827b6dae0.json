{"ast":null,"code":"import WalletConnectProvider from\"@walletconnect/web3-provider\";import CoinbaseWalletSDK from\"@coinbase/wallet-sdk\";import Torus from\"@toruslabs/torus-embed\";import React from\"react\";import{BrowserRouter,Route,Switch}from\"react-router-dom\";import Web3Modal from\"web3modal\";import{useSelector,useDispatch}from\"react-redux\";import{setExchangePrice,setGasPrice}from\"./actions\";import{Wallet}from\"./components\";import{INFURA_ID,NETWORKS}from\"./constants\";import{useExchangePrice,useGasPrice}from\"./hooks\";import{BrowsePlots,Whitelist}from\"./views\";var _require=require(\"ethers\"),ethers=_require.ethers;var network=\"rinkeby\";//process.env.REACT_APP_NETWORK;\nvar targetNetwork=NETWORKS[network];// <------- select your target frontend network (localhost, rinkeby, xdai, mainnet, mumbai)\nvar mainnetInfura=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\"+INFURA_ID):null;// 🏠 Your local provider is usually pointed at your local blockchain\nvar providerUrl=targetNetwork.rpcUrl;var networkProvider=network===\"localhost\"?new ethers.providers.StaticJsonRpcProvider(providerUrl):new ethers.providers.InfuraProvider(network,INFURA_ID);var providerOptions={walletconnect:{package:WalletConnectProvider,options:{infuraId:INFURA_ID}},coinbasewallet:{package:CoinbaseWalletSDK,options:{appName:\"CityDAO - Parcel Explorer\",infuraId:INFURA_ID,chainId:targetNetwork.chainId,darkMode:true}},torus:{package:Torus,options:{networkParams:{host:targetNetwork.rpcUrl,chainId:targetNetwork.chainId,networkId:targetNetwork.chainId}}},binancechainwallet:{package:true}};var web3Modal=new Web3Modal({// network: network,\n// cacheProvider: true,\ntheme:\"dark\",providerOptions:providerOptions});function Web3Wrapper(){var userAddress=useSelector(function(state){return state.user.address;});var price=useSelector(function(state){return state.network.exchangePrice;});var dispatch=useDispatch();var mainnetProvider=mainnetInfura;dispatch(setExchangePrice(useExchangePrice(targetNetwork,mainnetProvider)));dispatch(setGasPrice(useGasPrice(targetNetwork,\"fast\")));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\"},/*#__PURE__*/React.createElement(BrowsePlots,{web3Modal:web3Modal,networkProvider:networkProvider})),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/whitelist\"},/*#__PURE__*/React.createElement(Whitelist,{web3Modal:web3Modal,networkProvider:networkProvider})))),process.env.NODE_ENV===\"development\"?/*#__PURE__*/React.createElement(Wallet,{price:price,toAddress:userAddress,provider:networkProvider}):null);}export default Web3Wrapper;","map":null,"metadata":{},"sourceType":"module"}