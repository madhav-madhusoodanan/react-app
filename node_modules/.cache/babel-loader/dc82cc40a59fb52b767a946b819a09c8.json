{"ast":null,"code":"import _regeneratorRuntime from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMemo,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{toast}from\"react-toastify\";import{setUserAddress}from\"../actions\";var useUserSigner=function useUserSigner(injectedProvider){var _useState=useState(),_useState2=_slicedToArray(_useState,2),signer=_useState2[0],setSigner=_useState2[1];var DEBUG=useSelector(function(state){return state.debug.debug;});var dispatch=useDispatch();useMemo(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var injectedSigner;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!injectedProvider){_context.next=21;break;}DEBUG&&console.log(\"ðŸ¦Š Using injected provider\");injectedSigner=injectedProvider._isProvider?injectedProvider.getSigner():injectedProvider;setSigner(injectedSigner);_context.prev=4;_context.t0=dispatch;_context.t1=setUserAddress;_context.next=9;return injectedSigner.getAddress();case 9:_context.t2=_context.sent;_context.t3=(0,_context.t1)(_context.t2);(0,_context.t0)(_context.t3);_context.next=19;break;case 14:_context.prev=14;_context.t4=_context[\"catch\"](4);DEBUG&&console.log(\"ðŸ¦Š Error getting injected provider address\",_context.t4);toast.error(\"No wallet connected!\",{className:\"error\",toastId:\"no-address\"});dispatch(setUserAddress(undefined));case 19:_context.next=22;break;case 21:setSigner();case 22:case\"end\":return _context.stop();}}},_callee,null,[[4,14]]);})),[injectedProvider]);return signer;};export default useUserSigner;","map":null,"metadata":{},"sourceType":"module"}