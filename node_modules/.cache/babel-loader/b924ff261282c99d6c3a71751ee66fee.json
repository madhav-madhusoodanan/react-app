{"ast":null,"code":"var _jsxFileName = \"/home/madhav/Documents/freelancers/app/packages/react-app/src/components/PlotButton.tsx\";\nimport React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { setHighlightedPlot } from \"../actions\";\nimport { setActivePlot } from \"../actions/plotsSlice\";\nimport LAND_IMG from \"../assets/images/SampleLandImage.png\";\nimport { stringifyPlotId } from \"../helpers/stringifyPlotId\";\nexport default function PlotButton({\n  plot,\n  delay\n}) {\n  const dispatch = useAppDispatch();\n  const highlightedPlot = useAppSelector(state => state.plots.highlightedPlot);\n  return (\n    /*#__PURE__*/\n    // Don't use the antd Button class here as that adds subcomponents that mess with styling\n    // Instead, we use a standard button tag with the ant-btn class name, giving the same style attributes\n    React.createElement(AnimatePresence, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(motion.button, {\n      initial: {\n        y: 50,\n        opacity: 0\n      },\n      animate: {\n        y: 0,\n        opacity: 1\n      },\n      exit: {\n        y: 50,\n        opacity: 0\n      },\n      transition: {\n        delay: 0.1 * delay\n      },\n      onMouseEnter: () => dispatch(setHighlightedPlot(plot)),\n      onMouseLeave: () => dispatch(setHighlightedPlot(undefined)),\n      onClick: () => dispatch(setActivePlot(plot)),\n      className: `btn w-full ${highlightedPlot === plot ? \"highlight\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex justify-between w-full p-1 items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex justify-start items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: LAND_IMG,\n      alt: plot === null || plot === void 0 ? void 0 : plot.id.toString(),\n      className: \"img-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-title primary-font text-lg font-medium leading-6 mx-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Plot #\", stringifyPlotId(plot.id)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-lg secondary-font text-gray-9 leading-6 third-font mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Parcel \", plot.parcel)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"plot-price primary-font text-lg font-light leading-6 float-right items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, (plot === null || plot === void 0 ? void 0 : plot.price) !== undefined && `${plot.price.toString()} ETH`))))\n  );\n}","map":{"version":3,"sources":["/home/madhav/Documents/freelancers/app/packages/react-app/src/components/PlotButton.tsx"],"names":["React","AnimatePresence","motion","useAppDispatch","useAppSelector","setHighlightedPlot","setActivePlot","LAND_IMG","stringifyPlotId","PlotButton","plot","delay","dispatch","highlightedPlot","state","plots","y","opacity","undefined","id","toString","parcel","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAwC,eAAxC;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,UAA/C;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAOA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,EAA4C;AACzD,QAAMC,QAAQ,GAAGT,cAAc,EAA/B;AACA,QAAMU,eAAe,GAAGT,cAAc,CAACU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,eAAtB,CAAtC;AAEA;AAAA;AACE;AACA;AACA,wBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,OAAO,EAAE;AAAEG,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADX;AAEE,MAAA,OAAO,EAAE;AAAED,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAFX;AAGE,MAAA,IAAI,EAAE;AAAED,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHR;AAIE,MAAA,UAAU,EAAE;AAAEN,QAAAA,KAAK,EAAE,MAAMA;AAAf,OAJd;AAKE,MAAA,YAAY,EAAE,MAAMC,QAAQ,CAACP,kBAAkB,CAACK,IAAD,CAAnB,CAL9B;AAME,MAAA,YAAY,EAAE,MAAME,QAAQ,CAACP,kBAAkB,CAACa,SAAD,CAAnB,CAN9B;AAOE,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAACN,aAAa,CAACI,IAAD,CAAd,CAPzB;AAQE,MAAA,SAAS,EAAG,cAAaG,eAAe,KAAKH,IAApB,GAA2B,WAA3B,GAAyC,EAAG,EARvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEH,QAAV;AAAoB,MAAA,GAAG,EAAEG,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAES,EAAN,CAASC,QAAT,EAAzB;AAA8C,MAAA,SAAS,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAM,MAAA,SAAS,EAAC,4DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACSZ,eAAe,CAACE,IAAI,CAACS,EAAN,CADxB,CAFF,eAKE;AAAM,MAAA,SAAS,EAAC,8DAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuFT,IAAI,CAACW,MAA5F,CALF,CADF,eAQE;AAAM,MAAA,SAAS,EAAC,+EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAAX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEY,KAAN,MAAgBJ,SAAhB,IAA8B,GAAER,IAAI,CAACY,KAAL,CAAWF,QAAX,EAAsB,MADzD,CARF,CAVF,CADF;AAHF;AA6BD","sourcesContent":["import React from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { Plot } from \"../models/Plot\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { setHighlightedPlot } from \"../actions\";\nimport { setActivePlot } from \"../actions/plotsSlice\";\n\nimport LAND_IMG from \"../assets/images/SampleLandImage.png\";\nimport { stringifyPlotId } from \"../helpers/stringifyPlotId\";\n\ninterface Props {\n  plot: Plot;\n  delay: number;\n}\n\nexport default function PlotButton({ plot, delay }: Props) {\n  const dispatch = useAppDispatch();\n  const highlightedPlot = useAppSelector(state => state.plots.highlightedPlot);\n\n  return (\n    // Don't use the antd Button class here as that adds subcomponents that mess with styling\n    // Instead, we use a standard button tag with the ant-btn class name, giving the same style attributes\n    <AnimatePresence>\n      <motion.button\n        initial={{ y: 50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: 50, opacity: 0 }}\n        transition={{ delay: 0.1 * delay }}\n        onMouseEnter={() => dispatch(setHighlightedPlot(plot))}\n        onMouseLeave={() => dispatch(setHighlightedPlot(undefined))}\n        onClick={() => dispatch(setActivePlot(plot))}\n        className={`btn w-full ${highlightedPlot === plot ? \"highlight\" : \"\"}`}\n      >\n        <div className=\"flex justify-between w-full p-1 items-center\">\n          <div className=\"flex justify-start items-center\">\n            <img src={LAND_IMG} alt={plot?.id.toString()} className=\"img-small\" />\n            <span className=\"plot-title primary-font text-lg font-medium leading-6 mx-2\">\n              Plot #{stringifyPlotId(plot.id)}\n            </span>\n            <span className=\"text-lg secondary-font text-gray-9 leading-6 third-font mb-1\">Parcel {plot.parcel}</span>\n          </div>\n          <span className=\"plot-price primary-font text-lg font-light leading-6 float-right items-center\">\n            {plot?.price !== undefined && `${plot.price.toString()} ETH`}\n          </span>\n        </div>\n      </motion.button>\n    </AnimatePresence>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}