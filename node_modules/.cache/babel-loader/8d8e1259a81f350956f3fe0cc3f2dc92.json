{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar aes_js_1 = __importDefault(require(\"aes-js\"));\n\nvar randombytes_1 = __importDefault(require(\"randombytes\"));\n\nvar hash = __importStar(require(\"hash.js\"));\n\nvar pkcs7 = __importStar(require(\"./pkcs7\"));\n\nvar constants_1 = require(\"../constants\");\n\nvar helpers_1 = require(\"../helpers\");\n\nfunction fallbackRandomBytes(length) {\n  return randombytes_1.default(length);\n}\n\nexports.fallbackRandomBytes = fallbackRandomBytes;\n\nfunction fallbackAesEncrypt(iv, key, data) {\n  var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n  var padded = helpers_1.arrayToBuffer(pkcs7.pad(data));\n  var encryptedBytes = aesCbc.encrypt(padded);\n  return Buffer.from(encryptedBytes);\n}\n\nexports.fallbackAesEncrypt = fallbackAesEncrypt;\n\nfunction fallbackAesDecrypt(iv, key, data) {\n  var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n  var encryptedBytes = aesCbc.decrypt(data);\n  var padded = Buffer.from(encryptedBytes);\n  var result = helpers_1.arrayToBuffer(pkcs7.unpad(padded));\n  return result;\n}\n\nexports.fallbackAesDecrypt = fallbackAesDecrypt;\n\nfunction fallbackHmacSha256Sign(key, data) {\n  var result = hash.hmac(hash[constants_1.SHA256_NODE_ALGO], key).update(data).digest(constants_1.HEX_ENC);\n  return helpers_1.hexToBuffer(result);\n}\n\nexports.fallbackHmacSha256Sign = fallbackHmacSha256Sign;\n\nfunction fallbackHmacSha512Sign(key, data) {\n  var result = hash.hmac(hash[constants_1.SHA512_NODE_ALGO], key).update(data).digest(constants_1.HEX_ENC);\n  return helpers_1.hexToBuffer(result);\n}\n\nexports.fallbackHmacSha512Sign = fallbackHmacSha512Sign;\n\nfunction fallbackSha256(msg) {\n  var result = hash.sha256().update(msg).digest(constants_1.HEX_ENC);\n  return helpers_1.hexToBuffer(result);\n}\n\nexports.fallbackSha256 = fallbackSha256;\n\nfunction fallbackSha512(msg) {\n  var result = hash.sha512().update(msg).digest(constants_1.HEX_ENC);\n  return helpers_1.hexToBuffer(result);\n}\n\nexports.fallbackSha512 = fallbackSha512;\n\nfunction fallbackRipemd160(msg) {\n  var result = hash.ripemd160().update(msg).digest(constants_1.HEX_ENC);\n  return helpers_1.hexToBuffer(result);\n}\n\nexports.fallbackRipemd160 = fallbackRipemd160;","map":null,"metadata":{},"sourceType":"script"}