{"ast":null,"code":"import _classCallCheck from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport randombytes from 'randombytes';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport keccakLib from 'keccak'; // TODO: should be crypto safe\n\nvar randomId = function randomId() {\n  return randombytes(32).toString(\"hex\");\n};\n\nvar URLWithHashParams = /*#__PURE__*/function (_URL) {\n  _inherits(URLWithHashParams, _URL);\n\n  var _super = _createSuper(URLWithHashParams);\n\n  function URLWithHashParams() {\n    var _this;\n\n    _classCallCheck(this, URLWithHashParams);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"hashParams\", new URLSearchParams());\n\n    return _this;\n  }\n\n  _createClass(URLWithHashParams, [{\n    key: \"toString\",\n    value: function toString() {\n      this.hash = this.hashParams.toString();\n      return _get(_getPrototypeOf(URLWithHashParams.prototype), \"toString\", this).call(this);\n    }\n  }]);\n\n  return URLWithHashParams;\n}( /*#__PURE__*/_wrapNativeSuper(URL));\n\nvar base64url = base64urlLib;\n\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\n\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nvar keccak = keccakLib;\n\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\n\nfunction keccak256(str) {\n  var input = str;\n\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n\n  var data = \"0x\".concat(keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\"));\n  return data;\n}\n\nexport { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };","map":null,"metadata":{},"sourceType":"module"}