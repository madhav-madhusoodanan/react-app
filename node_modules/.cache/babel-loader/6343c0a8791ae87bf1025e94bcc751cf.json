{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar client_1 = tslib_1.__importDefault(require(\"@walletconnect/client\"));\n\nvar qrcode_modal_1 = tslib_1.__importDefault(require(\"@walletconnect/qrcode-modal\"));\n\nvar http_connection_1 = tslib_1.__importDefault(require(\"@walletconnect/http-connection\"));\n\nvar utils_1 = require(\"@walletconnect/utils\");\n\nvar ProviderEngine = require(\"web3-provider-engine\");\n\nvar CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\n\nvar FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\n\nvar FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\n\nvar HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\n\nvar NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\n\nvar SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\n\nvar WalletConnectProvider = /*#__PURE__*/function (_ProviderEngine) {\n  _inherits(WalletConnectProvider, _ProviderEngine);\n\n  var _super = _createSuper(WalletConnectProvider);\n\n  function WalletConnectProvider(opts) {\n    var _this;\n\n    _classCallCheck(this, WalletConnectProvider);\n\n    _this = _super.call(this, {\n      pollingInterval: opts.pollingInterval || 8000\n    });\n    _this.bridge = \"https://bridge.walletconnect.org\";\n    _this.qrcode = true;\n    _this.qrcodeModalOptions = undefined;\n    _this.rpc = null;\n    _this.infuraId = \"\";\n    _this.http = null;\n    _this.isConnecting = false;\n    _this.connected = false;\n    _this.connectCallbacks = [];\n    _this.accounts = [];\n    _this.chainId = 1;\n    _this.networkId = 1;\n    _this.rpcUrl = \"\";\n    _this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || \"https://bridge.walletconnect.org\";\n    _this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n    _this.qrcodeModalOptions = opts.qrcodeModalOptions;\n    _this.wc = opts.connector || new client_1.default({\n      bridge: _this.bridge,\n      qrcodeModal: _this.qrcode ? qrcode_modal_1.default : undefined,\n      qrcodeModalOptions: _this.qrcodeModalOptions\n    });\n    _this.rpc = opts.rpc || null;\n\n    if (!_this.rpc && (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n      throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n    }\n\n    _this.infuraId = opts.infuraId || \"\";\n    _this.chainId = typeof opts.chainId !== \"undefined\" ? opts.chainId : 1;\n    _this.networkId = _this.chainId;\n\n    _this.updateRpcUrl(_this.chainId);\n\n    _this.addProvider(new FixtureSubprovider({\n      eth_hashrate: \"0x00\",\n      eth_mining: false,\n      eth_syncing: true,\n      net_listening: true,\n      web3_clientVersion: \"WalletConnect/v1.x.x/javascript\"\n    }));\n\n    _this.addProvider(new CacheSubprovider());\n\n    _this.addProvider(new SubscriptionsSubprovider());\n\n    _this.addProvider(new FilterSubprovider());\n\n    _this.addProvider(new NonceSubprovider());\n\n    _this.addProvider(new HookedWalletSubprovider({\n      getAccounts: function getAccounts(cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var wc, accounts;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context.sent;\n                  accounts = wc.accounts;\n\n                  if (accounts && accounts.length) {\n                    cb(null, accounts);\n                  } else {\n                    cb(new Error(\"Failed to get accounts\"));\n                  }\n\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  cb(_context.t0);\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 8]]);\n        }));\n      },\n      processMessage: function processMessage(msgParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context2.sent;\n                  _context2.next = 6;\n                  return wc.signMessage([msgParams.from, msgParams.data]);\n\n                case 6:\n                  result = _context2.sent;\n                  cb(null, result);\n                  _context2.next = 13;\n                  break;\n\n                case 10:\n                  _context2.prev = 10;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  cb(_context2.t0);\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[0, 10]]);\n        }));\n      },\n      processPersonalMessage: function processPersonalMessage(msgParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context3.sent;\n                  _context3.next = 6;\n                  return wc.signPersonalMessage([msgParams.data, msgParams.from]);\n\n                case 6:\n                  result = _context3.sent;\n                  cb(null, result);\n                  _context3.next = 13;\n                  break;\n\n                case 10:\n                  _context3.prev = 10;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  cb(_context3.t0);\n\n                case 13:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this, [[0, 10]]);\n        }));\n      },\n      processSignTransaction: function processSignTransaction(txParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.prev = 0;\n                  _context4.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context4.sent;\n                  _context4.next = 6;\n                  return wc.signTransaction(txParams);\n\n                case 6:\n                  result = _context4.sent;\n                  cb(null, result);\n                  _context4.next = 13;\n                  break;\n\n                case 10:\n                  _context4.prev = 10;\n                  _context4.t0 = _context4[\"catch\"](0);\n                  cb(_context4.t0);\n\n                case 13:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this, [[0, 10]]);\n        }));\n      },\n      processTransaction: function processTransaction(txParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.prev = 0;\n                  _context5.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context5.sent;\n                  _context5.next = 6;\n                  return wc.sendTransaction(txParams);\n\n                case 6:\n                  result = _context5.sent;\n                  cb(null, result);\n                  _context5.next = 13;\n                  break;\n\n                case 10:\n                  _context5.prev = 10;\n                  _context5.t0 = _context5[\"catch\"](0);\n                  cb(_context5.t0);\n\n                case 13:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this, [[0, 10]]);\n        }));\n      },\n      processTypedMessage: function processTypedMessage(msgParams, cb) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n          var wc, result;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.prev = 0;\n                  _context6.next = 3;\n                  return this.getWalletConnector();\n\n                case 3:\n                  wc = _context6.sent;\n                  _context6.next = 6;\n                  return wc.signTypedData([msgParams.from, msgParams.data]);\n\n                case 6:\n                  result = _context6.sent;\n                  cb(null, result);\n                  _context6.next = 13;\n                  break;\n\n                case 10:\n                  _context6.prev = 10;\n                  _context6.t0 = _context6[\"catch\"](0);\n                  cb(_context6.t0);\n\n                case 13:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, this, [[0, 10]]);\n        }));\n      }\n    }));\n\n    _this.addProvider({\n      handleRequest: function handleRequest(payload, next, end) {\n        return tslib_1.__awaiter(_assertThisInitialized(_this), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n          var _yield$this$handleReq, result;\n\n          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.prev = 0;\n                  _context7.next = 3;\n                  return this.handleRequest(payload);\n\n                case 3:\n                  _yield$this$handleReq = _context7.sent;\n                  result = _yield$this$handleReq.result;\n                  end(null, result);\n                  _context7.next = 11;\n                  break;\n\n                case 8:\n                  _context7.prev = 8;\n                  _context7.t0 = _context7[\"catch\"](0);\n                  end(_context7.t0);\n\n                case 11:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7, this, [[0, 8]]);\n        }));\n      },\n      setEngine: function setEngine(_) {\n        return _;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"enable\",\n    value: function enable() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getWalletConnector();\n\n              case 2:\n                wc = _context8.sent;\n\n                if (!wc) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                this.start();\n                this.subscribeWalletConnector();\n                return _context8.abrupt(\"return\", wc.accounts);\n\n              case 9:\n                throw new Error(\"Failed to connect to WalleConnect\");\n\n              case 10:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"request\",\n    value: function request(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this.send(payload));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"send\",\n    value: function send(payload, callback) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!(typeof payload === \"string\")) {\n                  _context10.next = 5;\n                  break;\n                }\n\n                method = payload;\n                params = callback;\n\n                if (method === \"personal_sign\") {\n                  params = utils_1.parsePersonalSign(params);\n                }\n\n                return _context10.abrupt(\"return\", this.sendAsyncPromise(method, params));\n\n              case 5:\n                payload = Object.assign({\n                  id: utils_1.payloadId(),\n                  jsonrpc: \"2.0\"\n                }, payload);\n\n                if (payload.method === \"personal_sign\") {\n                  payload.params = utils_1.parsePersonalSign(payload.params);\n                }\n\n                if (!callback) {\n                  _context10.next = 10;\n                  break;\n                }\n\n                this.sendAsync(payload, callback);\n                return _context10.abrupt(\"return\");\n\n              case 10:\n                return _context10.abrupt(\"return\", this.sendAsyncPromise(payload.method, payload.params));\n\n              case 11:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"onConnect\",\n    value: function onConnect(callback) {\n      this.connectCallbacks.push(callback);\n    }\n  }, {\n    key: \"triggerConnect\",\n    value: function triggerConnect(result) {\n      if (this.connectCallbacks && this.connectCallbacks.length) {\n        this.connectCallbacks.forEach(function (callback) {\n          return callback(result);\n        });\n      }\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this.close();\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.getWalletConnector({\n                  disableSessionCreation: true\n                });\n\n              case 2:\n                wc = _context12.sent;\n                _context12.next = 5;\n                return wc.killSession();\n\n              case 5:\n                _context12.next = 7;\n                return this.onDisconnect();\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"handleRequest\",\n    value: function handleRequest(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var response, result, wc;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                result = null;\n                _context13.next = 4;\n                return this.getWalletConnector();\n\n              case 4:\n                wc = _context13.sent;\n                _context13.t0 = payload.method;\n                _context13.next = _context13.t0 === \"wc_killSession\" ? 8 : _context13.t0 === \"eth_accounts\" ? 12 : _context13.t0 === \"eth_coinbase\" ? 14 : _context13.t0 === \"eth_chainId\" ? 16 : _context13.t0 === \"net_version\" ? 18 : _context13.t0 === \"eth_uninstallFilter\" ? 20 : 23;\n                break;\n\n              case 8:\n                _context13.next = 10;\n                return this.close();\n\n              case 10:\n                result = null;\n                return _context13.abrupt(\"break\", 26);\n\n              case 12:\n                result = wc.accounts;\n                return _context13.abrupt(\"break\", 26);\n\n              case 14:\n                result = wc.accounts[0];\n                return _context13.abrupt(\"break\", 26);\n\n              case 16:\n                result = wc.chainId;\n                return _context13.abrupt(\"break\", 26);\n\n              case 18:\n                result = wc.networkId || wc.chainId;\n                return _context13.abrupt(\"break\", 26);\n\n              case 20:\n                this.sendAsync(payload, function (_) {\n                  return _;\n                });\n                result = true;\n                return _context13.abrupt(\"break\", 26);\n\n              case 23:\n                _context13.next = 25;\n                return this.handleOtherRequests(payload);\n\n              case 25:\n                response = _context13.sent;\n\n              case 26:\n                if (!response) {\n                  _context13.next = 28;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", response);\n\n              case 28:\n                return _context13.abrupt(\"return\", this.formatResponse(payload, result));\n\n              case 31:\n                _context13.prev = 31;\n                _context13.t1 = _context13[\"catch\"](0);\n                this.emit(\"error\", _context13.t1);\n                throw _context13.t1;\n\n              case 35:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[0, 31]]);\n      }));\n    }\n  }, {\n    key: \"handleOtherRequests\",\n    value: function handleOtherRequests(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var wc, result;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (!(!utils_1.signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\"))) {\n                  _context14.next = 2;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", this.handleReadRequests(payload));\n\n              case 2:\n                _context14.next = 4;\n                return this.getWalletConnector();\n\n              case 4:\n                wc = _context14.sent;\n                _context14.next = 7;\n                return wc.sendCustomRequest(payload);\n\n              case 7:\n                result = _context14.sent;\n                return _context14.abrupt(\"return\", this.formatResponse(payload, result));\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n    }\n  }, {\n    key: \"handleReadRequests\",\n    value: function handleReadRequests(payload) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var error;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (this.http) {\n                  _context15.next = 4;\n                  break;\n                }\n\n                error = new Error(\"HTTP Connection not available\");\n                this.emit(\"error\", error);\n                throw error;\n\n              case 4:\n                return _context15.abrupt(\"return\", this.http.send(payload));\n\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n    }\n  }, {\n    key: \"formatResponse\",\n    value: function formatResponse(payload, result) {\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n    }\n  }, {\n    key: \"getWalletConnector\",\n    value: function getWalletConnector() {\n      var _this2 = this;\n\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$disableSessionC = opts.disableSessionCreation,\n          disableSessionCreation = _opts$disableSessionC === void 0 ? false : _opts$disableSessionC;\n      return new Promise(function (resolve, reject) {\n        var wc = _this2.wc;\n\n        if (_this2.isConnecting) {\n          _this2.onConnect(function (x) {\n            return resolve(x);\n          });\n        } else if (!wc.connected && !disableSessionCreation) {\n          _this2.isConnecting = true;\n          var sessionRequestOpions = _this2.chainId ? {\n            chainId: _this2.chainId\n          } : undefined;\n          wc.on(\"modal_closed\", function () {\n            reject(new Error(\"User closed modal\"));\n          });\n          wc.createSession(sessionRequestOpions).then(function () {\n            wc.on(\"connect\", function (error, payload) {\n              if (error) {\n                _this2.isConnecting = false;\n                return reject(error);\n              }\n\n              _this2.isConnecting = false;\n              _this2.connected = true;\n\n              if (payload) {\n                _this2.updateState(payload.params[0]);\n              }\n\n              _this2.emit(\"connect\");\n\n              _this2.triggerConnect(wc);\n\n              resolve(wc);\n            });\n          }).catch(function (error) {\n            _this2.isConnecting = false;\n            reject(error);\n          });\n        } else {\n          if (!_this2.connected) {\n            _this2.connected = true;\n\n            _this2.updateState(wc.session);\n          }\n\n          resolve(wc);\n        }\n      });\n    }\n  }, {\n    key: \"subscribeWalletConnector\",\n    value: function subscribeWalletConnector() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var _this3 = this;\n\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.getWalletConnector();\n\n              case 2:\n                wc = _context16.sent;\n                wc.on(\"disconnect\", function (error) {\n                  if (error) {\n                    _this3.emit(\"error\", error);\n\n                    return;\n                  }\n\n                  _this3.onDisconnect();\n                });\n                wc.on(\"session_update\", function (error, payload) {\n                  if (error) {\n                    _this3.emit(\"error\", error);\n\n                    return;\n                  }\n\n                  _this3.updateState(payload.params[0]);\n                });\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.stop();\n\n              case 2:\n                this.emit(\"close\", 1000, \"Connection closed\");\n                this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(sessionParams) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var accounts, chainId, networkId, rpcUrl;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                accounts = sessionParams.accounts, chainId = sessionParams.chainId, networkId = sessionParams.networkId, rpcUrl = sessionParams.rpcUrl;\n\n                if (!this.accounts || accounts && this.accounts !== accounts) {\n                  this.accounts = accounts;\n                  this.emit(\"accountsChanged\", accounts);\n                }\n\n                if (!this.chainId || chainId && this.chainId !== chainId) {\n                  this.chainId = chainId;\n                  this.emit(\"chainChanged\", chainId);\n                }\n\n                if (!this.networkId || networkId && this.networkId !== networkId) {\n                  this.networkId = networkId;\n                  this.emit(\"networkChanged\", networkId);\n                }\n\n                this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n\n              case 5:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"updateRpcUrl\",\n    value: function updateRpcUrl(chainId) {\n      var rpcUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var infuraNetworks = {\n        1: \"mainnet\",\n        3: \"ropsten\",\n        4: \"rinkeby\",\n        5: \"goerli\",\n        42: \"kovan\"\n      };\n      var network = infuraNetworks[chainId];\n\n      if (!rpcUrl) {\n        if (this.rpc && this.rpc[chainId]) {\n          rpcUrl = this.rpc[chainId];\n        } else if (network) {\n          rpcUrl = \"https://\".concat(network, \".infura.io/v3/\").concat(this.infuraId);\n        }\n      }\n\n      if (rpcUrl) {\n        this.rpcUrl = rpcUrl;\n        this.updateHttpConnection();\n      } else {\n        this.emit(\"error\", new Error(\"No RPC Url available for chainId: \".concat(chainId)));\n      }\n    }\n  }, {\n    key: \"updateHttpConnection\",\n    value: function updateHttpConnection() {\n      var _this4 = this;\n\n      if (this.rpcUrl) {\n        this.http = new http_connection_1.default(this.rpcUrl);\n        this.http.on(\"payload\", function (payload) {\n          return _this4.emit(\"payload\", payload);\n        });\n        this.http.on(\"error\", function (error) {\n          return _this4.emit(\"error\", error);\n        });\n      }\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(method, params) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5.sendAsync({\n          id: utils_1.payloadId(),\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || []\n        }, function (error, response) {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(response.result);\n        });\n      });\n    }\n  }, {\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.wc;\n    }\n  }, {\n    key: \"walletMeta\",\n    get: function get() {\n      return this.wc.peerMeta;\n    }\n  }]);\n\n  return WalletConnectProvider;\n}(ProviderEngine);\n\nexports.default = WalletConnectProvider;","map":null,"metadata":{},"sourceType":"script"}