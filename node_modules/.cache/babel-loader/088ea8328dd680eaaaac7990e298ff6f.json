{"ast":null,"code":"import _regeneratorRuntime from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{usePoller}from\"eth-hooks\";import{useState}from\"react\";export default function useGasPrice(targetNetwork,speed){var _useState=useState(),_useState2=_slicedToArray(_useState,2),gasPrice=_useState2[0],setGasPrice=_useState2[1];var loadGasPrice=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(targetNetwork.hasOwnProperty(\"gasPrice\")){setGasPrice(targetNetwork.gasPrice);}else if(navigator.onLine){axios.get(\"https://ethgasstation.info/json/ethgasAPI.json\").then(function(response){var newGasPrice=response.data[speed||\"fast\"]*100000000;if(newGasPrice!==gasPrice){setGasPrice(newGasPrice);}}).catch(function(error){return console.log(error);});}case 1:case\"end\":return _context.stop();}}},_callee);}));return function loadGasPrice(){return _ref.apply(this,arguments);};}();usePoller(loadGasPrice,39999);return gasPrice;}","map":null,"metadata":{},"sourceType":"module"}