{"ast":null,"code":"import _createClass from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * Counter block mode.\n */\nimport { BlockCipherMode } from './cipher-core.js';\nexport var CTR = /*#__PURE__*/function (_BlockCipherMode) {\n  _inherits(CTR, _BlockCipherMode);\n\n  var _super = _createSuper(CTR);\n\n  function CTR() {\n    _classCallCheck(this, CTR);\n\n    return _super.apply(this, arguments);\n  }\n\n  return CTR;\n}(BlockCipherMode);\n\nCTR.Encryptor = /*#__PURE__*/function (_CTR) {\n  _inherits(_class, _CTR);\n\n  var _super2 = _createSuper(_class);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(_class, [{\n    key: \"processBlock\",\n    value: function processBlock(words, offset) {\n      var _words = words; // Shortcuts\n\n      var cipher = this._cipher;\n      var blockSize = cipher.blockSize;\n      var iv = this._iv;\n      var counter = this._counter; // Generate keystream\n\n      if (iv) {\n        this._counter = iv.slice(0);\n        counter = this._counter; // Remove IV for subsequent blocks\n\n        this._iv = undefined;\n      }\n\n      var keystream = counter.slice(0);\n      cipher.encryptBlock(keystream, 0); // Increment counter\n\n      counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0; // Encrypt\n\n      for (var i = 0; i < blockSize; i += 1) {\n        _words[offset + i] ^= keystream[i];\n      }\n    }\n  }]);\n\n  return _class;\n}(CTR);\n\nCTR.Decryptor = CTR.Encryptor;","map":null,"metadata":{},"sourceType":"module"}