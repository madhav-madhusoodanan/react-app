{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectSpread = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar CID = require('cids');\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          result,\n          _iterator2,\n          _step2,\n          link,\n          entry,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('ls', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(Buffer.isBuffer(path) ? new CID(path) : path)\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 10:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 14;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 14:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 49;\n                break;\n              }\n\n              result = _value;\n              result = result.Objects;\n\n              if (result) {\n                _context.next = 20;\n                break;\n              }\n\n              throw new Error('expected .Objects in results');\n\n            case 20:\n              result = result[0];\n\n              if (result) {\n                _context.next = 23;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects');\n\n            case 23:\n              result = result.Links;\n\n              if (Array.isArray(result)) {\n                _context.next = 26;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects[0].Links');\n\n            case 26:\n              _iterator2 = _createForOfIteratorHelper(result);\n              _context.prev = 27;\n\n              _iterator2.s();\n\n            case 29:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 38;\n                break;\n              }\n\n              link = _step2.value;\n              entry = {\n                name: link.Name,\n                path: path + '/' + link.Name,\n                size: link.Size,\n                cid: new CID(link.Hash),\n                type: typeOf(link),\n                depth: link.Depth || 1\n              };\n\n              if (link.Mode) {\n                entry.mode = parseInt(link.Mode, 8);\n              }\n\n              if (link.Mtime !== undefined && link.Mtime !== null) {\n                entry.mtime = {\n                  secs: link.Mtime\n                };\n\n                if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n                  entry.mtime.nsecs = link.MtimeNsecs;\n                }\n              }\n\n              _context.next = 36;\n              return entry;\n\n            case 36:\n              _context.next = 29;\n              break;\n\n            case 38:\n              _context.next = 43;\n              break;\n\n            case 40:\n              _context.prev = 40;\n              _context.t0 = _context[\"catch\"](27);\n\n              _iterator2.e(_context.t0);\n\n            case 43:\n              _context.prev = 43;\n\n              _iterator2.f();\n\n              return _context.finish(43);\n\n            case 46:\n              _iteratorNormalCompletion = true;\n              _context.next = 8;\n              break;\n\n            case 49:\n              _context.next = 55;\n              break;\n\n            case 51:\n              _context.prev = 51;\n              _context.t1 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 55:\n              _context.prev = 55;\n              _context.prev = 56;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 60;\n                break;\n              }\n\n              _context.next = 60;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 60:\n              _context.prev = 60;\n\n              if (!_didIteratorError) {\n                _context.next = 63;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 63:\n              return _context.finish(60);\n\n            case 64:\n              return _context.finish(55);\n\n            case 65:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 51, 55, 65], [27, 40, 43, 46], [56,, 60, 64]]);\n    }));\n\n    function ls(_x) {\n      return _ls.apply(this, arguments);\n    }\n\n    return ls;\n  }();\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'unknown';\n  }\n}","map":null,"metadata":{},"sourceType":"script"}