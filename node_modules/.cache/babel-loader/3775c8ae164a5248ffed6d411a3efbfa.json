{"ast":null,"code":"var _jsxFileName = \"/home/madhav/Documents/freelancers/app/packages/react-app/src/components/PlotTabs.tsx\";\nimport React from \"react\";\nimport { Tabs } from \"antd\";\nimport { useAppSelector } from \"../hooks\";\nimport PlotList from \"./PlotList\";\nimport { stringifyPlotId } from \"../helpers/stringifyPlotId\";\nconst {\n  TabPane\n} = Tabs;\nexport default function PlotTabs() {\n  const userAddress = useAppSelector(state => state.user.address);\n  const fetchingPlots = useAppSelector(state => state.plots.fetching);\n  const idFilter = useAppSelector(state => state.plots.idFilter);\n  const plots = useAppSelector(state => state.plots.plots).filter(plot => {\n    return stringifyPlotId(plot.id).includes(idFilter !== null && idFilter !== void 0 ? idFilter : \"\");\n  });\n  return /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"1\",\n    className: \"plot-tabs px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Available\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PlotList, {\n    plots: plots.filter(plot => !plot.sold),\n    emptyMessage: fetchingPlots ? \"Loading...\" : \"We're sold out! Be on the lookout for the next drop.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Sold\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PlotList, {\n    plots: plots.filter(plot => plot.sold),\n    emptyMessage: fetchingPlots ? \"Loading...\" : \"No plots have been purchased. You could be the first!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Your Land\",\n    key: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, userAddress && /*#__PURE__*/React.createElement(PlotList, {\n    plots: plots.filter(plot => plot.owner === userAddress),\n    emptyMessage: fetchingPlots ? \"Loading...\" : \"You don't own any plots yet.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), !userAddress && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-7 third-font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }\n  }, \"Connect your wallet to see your owned plots\")));\n}","map":{"version":3,"sources":["/home/madhav/Documents/freelancers/app/packages/react-app/src/components/PlotTabs.tsx"],"names":["React","Tabs","useAppSelector","PlotList","stringifyPlotId","TabPane","PlotTabs","userAddress","state","user","address","fetchingPlots","plots","fetching","idFilter","filter","plot","id","includes","sold","owner"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AAGA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcJ,IAApB;AAEA,eAAe,SAASK,QAAT,GAAoB;AACjC,QAAMC,WAAW,GAAGL,cAAc,CAAEM,KAAD,IAAsBA,KAAK,CAACC,IAAN,CAAWC,OAAlC,CAAlC;AACA,QAAMC,aAAa,GAAGT,cAAc,CAAEM,KAAD,IAAsBA,KAAK,CAACI,KAAN,CAAYC,QAAnC,CAApC;AACA,QAAMC,QAAQ,GAAGZ,cAAc,CAAEM,KAAD,IAAsBA,KAAK,CAACI,KAAN,CAAYE,QAAnC,CAA/B;AACA,QAAMF,KAAK,GAAGV,cAAc,CAAEM,KAAD,IAAsBA,KAAK,CAACI,KAAN,CAAYA,KAAnC,CAAd,CAAwDG,MAAxD,CAA+DC,IAAI,IAAI;AACnF,WAAOZ,eAAe,CAACY,IAAI,CAACC,EAAN,CAAf,CAAyBC,QAAzB,CAAkCJ,QAAlC,aAAkCA,QAAlC,cAAkCA,QAAlC,GAA8C,EAA9C,CAAP;AACD,GAFa,CAAd;AAIA,sBACE,oBAAC,IAAD;AAAM,IAAA,gBAAgB,EAAC,GAAvB;AAA2B,IAAA,SAAS,EAAC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,WAAb;AAAyB,IAAA,GAAG,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACG,IAA3B,CADT;AAEE,IAAA,YAAY,EAAER,aAAa,GAAG,YAAH,GAAkB,sDAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,MAAb;AAAoB,IAAA,GAAG,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEC,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACG,IAA1B,CADT;AAEE,IAAA,YAAY,EAAER,aAAa,GAAG,YAAH,GAAkB,uDAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAaE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,WAAb;AAAyB,IAAA,GAAG,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,iBACV,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEK,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACI,KAAL,KAAeb,WAApC,CADT;AAEE,IAAA,YAAY,EAAEI,aAAa,GAAG,YAAH,GAAkB,8BAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOG,CAACJ,WAAD,iBAAgB;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAPnB,CAbF,CADF;AAyBD","sourcesContent":["import React from \"react\";\nimport { Tabs } from \"antd\";\n\nimport { RootState } from \"../store\";\nimport { useAppSelector } from \"../hooks\";\nimport PlotList from \"./PlotList\";\nimport { stringifyPlotId } from \"../helpers/stringifyPlotId\";\n\nconst { TabPane } = Tabs;\n\nexport default function PlotTabs() {\n  const userAddress = useAppSelector((state: RootState) => state.user.address);\n  const fetchingPlots = useAppSelector((state: RootState) => state.plots.fetching);\n  const idFilter = useAppSelector((state: RootState) => state.plots.idFilter);\n  const plots = useAppSelector((state: RootState) => state.plots.plots).filter(plot => {\n    return stringifyPlotId(plot.id).includes(idFilter ?? \"\");\n  });\n\n  return (\n    <Tabs defaultActiveKey=\"1\" className=\"plot-tabs px-4\">\n      <TabPane tab=\"Available\" key=\"1\">\n        <PlotList\n          plots={plots.filter(plot => !plot.sold)}\n          emptyMessage={fetchingPlots ? \"Loading...\" : \"We're sold out! Be on the lookout for the next drop.\"}\n        />\n      </TabPane>\n      <TabPane tab=\"Sold\" key=\"2\">\n        <PlotList\n          plots={plots.filter(plot => plot.sold)}\n          emptyMessage={fetchingPlots ? \"Loading...\" : \"No plots have been purchased. You could be the first!\"}\n        />\n      </TabPane>\n      <TabPane tab=\"Your Land\" key=\"3\">\n        {userAddress && (\n          <PlotList\n            plots={plots.filter(plot => plot.owner === userAddress)}\n            emptyMessage={fetchingPlots ? \"Loading...\" : \"You don't own any plots yet.\"}\n          />\n        )}\n        {!userAddress && <span className=\"text-gray-7 third-font\">Connect your wallet to see your owned plots</span>}\n      </TabPane>\n    </Tabs>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}