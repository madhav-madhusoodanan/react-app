{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _regeneratorRuntime from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty2 from \"/home/madhav/Documents/freelancers/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _WALLET_OPENLOGIN_VER, _paymentProviders$, _defaultVerifiers;\n\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nvar LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nvar WALLET_OPENLOGIN_VERIFIER_MAP = (_WALLET_OPENLOGIN_VER = {}, _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.GOOGLE, \"tkey-google\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.FACEBOOK, \"tkey-facebook\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.TWITCH, \"tkey-twitch\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.REDDIT, \"tkey-reddit\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.DISCORD, \"tkey-discord\"), _WALLET_OPENLOGIN_VER);\nvar PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nvar TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nvar BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nvar paymentProviders$1 = (_paymentProviders$ = {}, _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.RAMPNETWORK, {\n  line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n  line2: \"0.49% - 2.9%\",\n  line3: \"5,000€/purchase, 20,000€/mo\",\n  supportPage: \"https://instant.ramp.network/\",\n  minOrderValue: 50,\n  maxOrderValue: 20000,\n  validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.MOONPAY, {\n  line1: \"Credit / Debit Card / Apple Pay\",\n  line2: \"4.5% or 5 USD\",\n  line3: \"2,000€/day, 10,000€/mo\",\n  supportPage: \"https://help.moonpay.io/en/\",\n  minOrderValue: 24.99,\n  maxOrderValue: 50000,\n  validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.WYRE, {\n  line1: \"Apple Pay/ Debit/ Credit Card\",\n  line2: \"4.9% + 30¢ or 5 USD\",\n  line3: \"$250/day\",\n  supportPage: \"https://support.sendwyre.com/en/\",\n  minOrderValue: 5,\n  maxOrderValue: 500,\n  validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n  includeFees: false,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.XANPOOL, {\n  line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n  line2: \"2.5% buying, 3% selling\",\n  line3: \"$2,500 / day\",\n  supportPage: \"mailto:support@xanpool.com\",\n  minOrderValue: 100,\n  maxOrderValue: 2500,\n  validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n  validCryptoCurrencies: [\"ETH\", \"USDT\"],\n  includeFees: true,\n  sell: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.MERCURYO, {\n  line1: \"Credit/ Debit Card/ Apple Pay\",\n  line2: \"3.95% or 4 USD\",\n  line3: \"10,000€/day, 25,000€/mo\",\n  supportPage: \"mailto:support@mercuryo.io\",\n  minOrderValue: 30,\n  maxOrderValue: 5000,\n  validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.TRANSAK, {\n  line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n  line2: \"0.99% - 5.5% or 5 USD\",\n  line3: \"500€/day\",\n  supportPage: \"https://support.transak.com/hc/en-US\",\n  minOrderValue: 20,\n  maxOrderValue: 500,\n  validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n  includeFees: true,\n  enforceMax: false\n}), _paymentProviders$);\nvar translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations: translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\n\nvar runOnLoad = function runOnLoad(fn) {\n  return new Promise(function (resolve, reject) {\n    if (window.document.body != null) {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    } else {\n      window.document.addEventListener(\"DOMContentLoaded\", function () {\n        Promise.resolve(fn()).then(resolve).catch(reject);\n      });\n    }\n  });\n};\n\nvar htmlToElement = function htmlToElement(html) {\n  var template = window.document.createElement(\"template\");\n  var trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nvar handleEvent = function handleEvent(handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  var handlerWrapper = function handlerWrapper() {\n    handler.apply(void 0, handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nvar handleStream = function handleStream(handle, eventName, handler) {\n  var handlerWrapper = function handlerWrapper(chunk) {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nfunction documentReady() {\n  return _documentReady.apply(this, arguments);\n}\n\nfunction _documentReady() {\n  _documentReady = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", new Promise(function (resolve) {\n              if (document.readyState !== \"loading\") {\n                resolve();\n              } else {\n                handleEvent(document, \"DOMContentLoaded\", resolve);\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _documentReady.apply(this, arguments);\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: function disconnected() {\n      return \"Torus: Lost connection to Torus.\";\n    },\n    permanentlyDisconnected: function permanentlyDisconnected() {\n      return \"Torus: Disconnected from iframe. Page reload required.\";\n    },\n    sendSiteMetadata: function sendSiteMetadata() {\n      return \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\";\n    },\n    unsupportedSync: function unsupportedSync(method) {\n      return \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\");\n    },\n    invalidDuplexStream: function invalidDuplexStream() {\n      return \"Must provide a Node.js-style duplex stream.\";\n    },\n    invalidOptions: function invalidOptions(maxEventListeners, shouldSendMetadata) {\n      return \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\");\n    },\n    invalidRequestArgs: function invalidRequestArgs() {\n      return \"Expected a single, non-array, object argument.\";\n    },\n    invalidRequestMethod: function invalidRequestMethod() {\n      return \"'args.method' must be a non-empty string.\";\n    },\n    invalidRequestParams: function invalidRequestParams() {\n      return \"'args.params' must be an object or array if provided.\";\n    },\n    invalidLoggerObject: function invalidLoggerObject() {\n      return \"'args.logger' must be an object if provided.\";\n    },\n    invalidLoggerMethod: function invalidLoggerMethod(method) {\n      return \"'args.logger' must include required method '\".concat(method, \"'.\");\n    }\n  },\n  info: {\n    connected: function connected(chainId) {\n      return \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\");\n    }\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nvar paymentProviders = configuration.paymentProviders;\n\nvar validatePaymentProvider = function validatePaymentProvider(provider, params) {\n  var errors = {};\n\n  if (!provider) {\n    return {\n      errors: errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors: errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  var selectedProvider = paymentProviders[provider];\n  var selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    var requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors: errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\n\nfunction createErrorMiddleware() {\n  return function (req, res, next) {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(function (done) {\n      var error = res.error;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  var warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nvar getPreopenInstanceId = function getPreopenInstanceId() {\n  return Math.random().toString(36).slice(2);\n};\n\nvar getTorusUrl = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(buildEnv, integrity) {\n    var torusUrl, logLevel, version, versionUsed, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Do not change this line\n            version = \"1.22.2\";\n            versionUsed = integrity.version || version;\n            _context.prev = 2;\n\n            if (!((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version)) {\n              _context.next = 13;\n              break;\n            }\n\n            if (configuration.prodTorusUrl) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n              useAPIKey: true\n            });\n\n          case 7:\n            response = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 10:\n            response = {\n              data: configuration.prodTorusUrl\n            };\n\n          case 11:\n            versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n            configuration.prodTorusUrl = response.data;\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            log.error(_context.t0, \"unable to fetch latest version\");\n\n          case 18:\n            log.info(\"version used: \", versionUsed);\n            _context.t1 = buildEnv;\n            _context.next = _context.t1 === \"binance\" ? 22 : _context.t1 === \"testing\" ? 25 : _context.t1 === \"lrc\" ? 28 : _context.t1 === \"beta\" ? 31 : _context.t1 === \"development\" ? 34 : 37;\n            break;\n\n          case 22:\n            torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n            logLevel = \"info\";\n            return _context.abrupt(\"break\", 40);\n\n          case 25:\n            torusUrl = \"https://testing.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 28:\n            torusUrl = \"https://lrc.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 31:\n            torusUrl = \"https://beta.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 34:\n            torusUrl = \"http://localhost:4050\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 37:\n            torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n            logLevel = \"error\";\n            return _context.abrupt(\"break\", 40);\n\n          case 40:\n            return _context.abrupt(\"return\", {\n              torusUrl: torusUrl,\n              logLevel: logLevel\n            });\n\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 15]]);\n  }));\n\n  return function getTorusUrl(_x, _x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getUserLanguage = function getUserLanguage() {\n  var userLanguage = window.navigator.language || \"en-US\";\n  var userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nvar EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nvar NOOP = function NOOP() {// empty function\n};\n\nvar FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nvar FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nvar FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = window[type];\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  var w = 1200;\n  var h = 700;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  var systemZoom = 1; // No reliable estimate\n\n  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  var features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nvar getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n  var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (error, response) {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nvar TorusInpageProvider = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(TorusInpageProvider, _SafeEventEmitter);\n\n  var _super = _createSuper(TorusInpageProvider);\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  function TorusInpageProvider(connectionStream) {\n    var _this;\n\n    _classCallCheck(this, TorusInpageProvider);\n\n    var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref5$maxEventListene = _ref5.maxEventListeners,\n        maxEventListeners = _ref5$maxEventListene === void 0 ? 100 : _ref5$maxEventListene,\n        _ref5$shouldSendMetad = _ref5.shouldSendMetadata,\n        shouldSendMetadata = _ref5$shouldSendMetad === void 0 ? true : _ref5$shouldSendMetad,\n        _ref5$jsonRpcStreamNa = _ref5.jsonRpcStreamName,\n        jsonRpcStreamName = _ref5$jsonRpcStreamNa === void 0 ? \"provider\" : _ref5$jsonRpcStreamNa;\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"chainId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"selectedAddress\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rpcEngine\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"networkVersion\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shouldSendMetadata\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isTorus\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_publicConfigStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tryPreopenHandle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enable\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_state\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    _this.isTorus = true;\n\n    _this.setMaxListeners(maxEventListeners); // private state\n\n\n    _this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    _this.selectedAddress = null;\n    _this.networkVersion = null;\n    _this.chainId = null;\n    _this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    _this._handleAccountsChanged = _this._handleAccountsChanged.bind(_assertThisInitialized(_this));\n    _this._handleChainChanged = _this._handleChainChanged.bind(_assertThisInitialized(_this));\n    _this._handleUnlockStateChanged = _this._handleUnlockStateChanged.bind(_assertThisInitialized(_this));\n    _this._handleConnect = _this._handleConnect.bind(_assertThisInitialized(_this));\n    _this._handleDisconnect = _this._handleDisconnect.bind(_assertThisInitialized(_this));\n    _this._handleStreamDisconnect = _this._handleStreamDisconnect.bind(_assertThisInitialized(_this));\n    _this._sendSync = _this._sendSync.bind(_assertThisInitialized(_this));\n    _this._rpcRequest = _this._rpcRequest.bind(_assertThisInitialized(_this));\n    _this._warnOfDeprecation = _this._warnOfDeprecation.bind(_assertThisInitialized(_this));\n    _this._initializeState = _this._initializeState.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this)); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    var mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, _this._handleStreamDisconnect.bind(_assertThisInitialized(_this), \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    _this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(_this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(_assertThisInitialized(_this), \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    _this.on(\"connect\", function () {\n      _this._state.isConnected = true;\n    }); // connect to async provider\n\n\n    var jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, _this._handleStreamDisconnect.bind(_assertThisInitialized(_this), \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    var rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    _this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", function (payload) {\n      var method = payload.method,\n          params = payload.params;\n\n      if (method === \"wallet_accountsChanged\") {\n        _this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        _this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        _this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        _this.emit(\"data\", payload); // deprecated\n\n\n        _this.emit(\"notification\", params.result);\n\n        _this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n    return _this;\n  }\n\n  _createClass(TorusInpageProvider, [{\n    key: \"isConnected\",\n\n    /**\n     * Returns whether the inpage provider is connected to Torus.\n     */\n    value: function isConnected() {\n      return this._state.isConnected;\n    }\n    /**\n     * Submits an RPC request for the given method, with the given params.\n     * Resolves with the result of the method call, or rejects on error.\n     *\n     * @param args - The RPC request arguments.\n     * @returns A Promise that resolves with the result of the RPC method,\n     * or rejects if an error is encountered.\n     */\n\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(args) {\n        var _this2 = this;\n\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestArgs(),\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestMethod(),\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestParams(),\n                  data: args\n                });\n\n              case 7:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this2._rpcRequest({\n                    method: method,\n                    params: params\n                  }, getRpcPromiseCallback(resolve, reject));\n                }));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function request(_x3) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n    /**\n     * Submits an RPC request per the given JSON-RPC request object.\n     *\n     * @param payload - The RPC request object.\n     * @param cb - The callback function.\n     */\n\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(payload, callback) {\n      this._rpcRequest(payload, callback);\n    }\n    /**\n     * We override the following event methods so that we can warn consumers\n     * about deprecated events:\n     *   addListener, on, once, prependListener, prependOnceListener\n     */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"addListener\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"on\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"once\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"prependListener\",\n    value: function prependListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"prependListener\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"prependOnceListener\",\n    value: function prependOnceListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"prependOnceListener\", this).call(this, eventName, listener);\n    } // Private Methods\n    //= ===================\n\n    /**\n     * Constructor helper.\n     * Populates initial state by calling 'wallet_getProviderState' and emits\n     * necessary events.\n     */\n\n  }, {\n    key: \"_initializeState\",\n    value: function () {\n      var _initializeState2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$request, accounts, chainId, isUnlocked, networkVersion;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.request({\n                  method: \"wallet_getProviderState\"\n                });\n\n              case 3:\n                _yield$this$request = _context3.sent;\n                accounts = _yield$this$request.accounts;\n                chainId = _yield$this$request.chainId;\n                isUnlocked = _yield$this$request.isUnlocked;\n                networkVersion = _yield$this$request.networkVersion;\n                // indicate that we've connected, for EIP-1193 compliance\n                this.emit(\"connect\", {\n                  chainId: chainId\n                });\n\n                this._handleChainChanged({\n                  chainId: chainId,\n                  networkVersion: networkVersion\n                });\n\n                this._handleUnlockStateChanged({\n                  accounts: accounts,\n                  isUnlocked: isUnlocked\n                });\n\n                this._handleAccountsChanged(accounts);\n\n                _context3.next = 17;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](0);\n                log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", _context3.t0);\n\n              case 17:\n                _context3.prev = 17;\n                log.info(\"initialized state\");\n                this._state.initialized = true;\n                this.emit(\"_initialized\");\n                return _context3.finish(17);\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 14, 17, 22]]);\n      }));\n\n      function _initializeState() {\n        return _initializeState2.apply(this, arguments);\n      }\n\n      return _initializeState;\n    }()\n    /**\n     * Internal RPC method. Forwards requests to background via the RPC engine.\n     * Also remap ids inbound and outbound.\n     *\n     * @param payload - The RPC request object.\n     * @param callback - The consumer's callback.\n     * @param isInternal - false - Whether the request is internal.\n     */\n\n  }, {\n    key: \"_rpcRequest\",\n    value: function _rpcRequest(payload, callback) {\n      var _this3 = this;\n\n      var isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var cb = callback;\n      var _payload = payload;\n\n      if (!Array.isArray(_payload)) {\n        if (!_payload.jsonrpc) {\n          _payload.jsonrpc = \"2.0\";\n        }\n\n        if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n          // handle accounts changing\n          cb = function cb(err, res) {\n            _this3._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n            callback(err, res);\n          };\n        } else if (_payload.method === \"wallet_getProviderState\") {\n          this._rpcEngine.handle(payload, cb);\n\n          return;\n        }\n      }\n\n      this.tryPreopenHandle(_payload, cb);\n    }\n  }, {\n    key: \"send\",\n    value: function send(methodOrPayload, callbackOrArgs) {\n      var _this4 = this;\n\n      if (!this._sentWarnings.send) {\n        log.warn(messages.warnings.sendDeprecation);\n        this._sentWarnings.send = true;\n      }\n\n      if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n        return new Promise(function (resolve, reject) {\n          try {\n            _this4._rpcRequest({\n              method: methodOrPayload,\n              params: callbackOrArgs\n            }, getRpcPromiseCallback(resolve, reject, false));\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n\n      if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n        return this._rpcRequest(methodOrPayload, callbackOrArgs);\n      }\n\n      return this._sendSync(methodOrPayload);\n    }\n    /**\n     * DEPRECATED.\n     * Internal backwards compatibility method, used in send.\n     */\n\n  }, {\n    key: \"_sendSync\",\n    value: function _sendSync(payload) {\n      var result;\n\n      switch (payload.method) {\n        case \"eth_accounts\":\n          result = this.selectedAddress ? [this.selectedAddress] : [];\n          break;\n\n        case \"eth_coinbase\":\n          result = this.selectedAddress || null;\n          break;\n\n        case \"eth_uninstallFilter\":\n          this._rpcRequest(payload, NOOP);\n\n          result = true;\n          break;\n\n        case \"net_version\":\n          result = this.networkVersion || null;\n          break;\n\n        default:\n          throw new Error(messages.errors.unsupportedSync(payload.method));\n      }\n\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n    }\n    /**\n     * When the provider becomes connected, updates internal state and emits\n     * required events. Idempotent.\n     *\n     * @param chainId - The ID of the newly connected chain.\n     * emits MetaMaskInpageProvider#connect\n     */\n\n  }, {\n    key: \"_handleConnect\",\n    value: function _handleConnect(chainId) {\n      if (!this._state.isConnected) {\n        this._state.isConnected = true;\n        this.emit(\"connect\", {\n          chainId: chainId\n        });\n        log.debug(messages.info.connected(chainId));\n      }\n    }\n    /**\n     * When the provider becomes disconnected, updates internal state and emits\n     * required events. Idempotent with respect to the isRecoverable parameter.\n     *\n     * Error codes per the CloseEvent status codes as required by EIP-1193:\n     * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n     *\n     * @param isRecoverable - Whether the disconnection is recoverable.\n     * @param errorMessage - A custom error message.\n     * emits MetaMaskInpageProvider#disconnect\n     */\n\n  }, {\n    key: \"_handleDisconnect\",\n    value: function _handleDisconnect(isRecoverable, errorMessage) {\n      if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n        this._state.isConnected = false;\n        var error;\n\n        if (isRecoverable) {\n          error = new EthereumRpcError(1013, // Try again later\n          errorMessage || messages.errors.disconnected());\n          log.debug(error);\n        } else {\n          error = new EthereumRpcError(1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected());\n          log.error(error);\n          this.chainId = null;\n          this._state.accounts = null;\n          this.selectedAddress = null;\n          this._state.isUnlocked = false;\n          this._state.isPermanentlyDisconnected = true;\n        }\n\n        this.emit(\"disconnect\", error);\n      }\n    }\n    /**\n     * Called when connection is lost to critical streams.\n     *\n     * emits MetamaskInpageProvider#disconnect\n     */\n\n  }, {\n    key: \"_handleStreamDisconnect\",\n    value: function _handleStreamDisconnect(streamName, error) {\n      logStreamDisconnectWarning(streamName, error, this);\n\n      this._handleDisconnect(false, error ? error.message : undefined);\n    }\n    /**\n     * Called when accounts may have changed.\n     */\n\n  }, {\n    key: \"_handleAccountsChanged\",\n    value: function _handleAccountsChanged(accounts) {\n      var isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // defensive programming\n\n      var finalAccounts = accounts;\n\n      if (!Array.isArray(finalAccounts)) {\n        log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n        finalAccounts = [];\n      }\n\n      var _iterator = _createForOfIteratorHelper(accounts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var account = _step.value;\n\n          if (typeof account !== \"string\") {\n            log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n            finalAccounts = [];\n            break;\n          }\n        } // emit accountsChanged if anything about the accounts array has changed\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!dequal(this._state.accounts, finalAccounts)) {\n        // we should always have the correct accounts even before eth_accounts\n        // returns, except in cases where isInternal is true\n        if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n          log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n        }\n\n        this._state.accounts = finalAccounts;\n        this.emit(\"accountsChanged\", finalAccounts);\n      } // handle selectedAddress\n\n\n      if (this.selectedAddress !== finalAccounts[0]) {\n        this.selectedAddress = finalAccounts[0] || null;\n      }\n    }\n    /**\n     * Upon receipt of a new chainId and networkVersion, emits corresponding\n     * events and sets relevant public state.\n     * Does nothing if neither the chainId nor the networkVersion are different\n     * from existing values.\n     *\n     * emits MetamaskInpageProvider#chainChanged\n     * @param networkInfo - An object with network info.\n     */\n\n  }, {\n    key: \"_handleChainChanged\",\n    value: function _handleChainChanged() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          chainId = _ref6.chainId,\n          networkVersion = _ref6.networkVersion;\n\n      if (!chainId || !networkVersion) {\n        log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n          chainId: chainId,\n          networkVersion: networkVersion\n        });\n        return;\n      }\n\n      if (networkVersion === \"loading\") {\n        this._handleDisconnect(true);\n      } else {\n        this._handleConnect(chainId);\n\n        if (chainId !== this.chainId) {\n          this.chainId = chainId;\n\n          if (this._state.initialized) {\n            this.emit(\"chainChanged\", this.chainId);\n          }\n        }\n      }\n    }\n    /**\n     * Upon receipt of a new isUnlocked state, sets relevant public state.\n     * Calls the accounts changed handler with the received accounts, or an empty\n     * array.\n     *\n     * Does nothing if the received value is equal to the existing value.\n     * There are no lock/unlock events.\n     *\n     * @param opts - Options bag.\n     */\n\n  }, {\n    key: \"_handleUnlockStateChanged\",\n    value: function _handleUnlockStateChanged() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          accounts = _ref7.accounts,\n          isUnlocked = _ref7.isUnlocked;\n\n      if (typeof isUnlocked !== \"boolean\") {\n        log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n          isUnlocked: isUnlocked\n        });\n        return;\n      }\n\n      if (isUnlocked !== this._state.isUnlocked) {\n        this._state.isUnlocked = isUnlocked;\n\n        this._handleAccountsChanged(accounts || []);\n      }\n    }\n    /**\n     * Warns of deprecation for the given event, if applicable.\n     */\n\n  }, {\n    key: \"_warnOfDeprecation\",\n    value: function _warnOfDeprecation(eventName) {\n      if (this._sentWarnings.events[eventName] === false) {\n        log.warn(messages.warnings.events[eventName]);\n        this._sentWarnings.events[eventName] = true;\n      }\n    }\n  }, {\n    key: \"publicConfigStore\",\n    get: function get() {\n      if (!this._sentWarnings.publicConfigStore) {\n        log.warn(messages.warnings.publicConfigStore);\n        this._sentWarnings.publicConfigStore = true;\n      }\n\n      return this._publicConfigStore;\n    }\n  }]);\n\n  return TorusInpageProvider;\n}(SafeEventEmitter);\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nvar defaults = function defaults(options) {\n  return {\n    algorithms: options.algorithms || [\"sha256\"],\n    delimiter: options.delimiter || \" \",\n    full: options.full || false\n  };\n}; // Generate list of hashes\n\n\nvar hashes = function hashes(options, data) {\n  var internalHashes = {};\n  options.algorithms.forEach(function (algorithm) {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nvar integrity = function integrity(options, sri) {\n  var output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(function (algorithm) {\n    return \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm]);\n  }).join(options.delimiter);\n  return output;\n};\n\nvar main = function main(options, data) {\n  // Defaults\n  var finalOptions = defaults(options);\n  var sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nvar PopupHandler = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(PopupHandler, _EventEmitter);\n\n  var _super2 = _createSuper(PopupHandler);\n\n  function PopupHandler(_ref) {\n    var _this5;\n\n    _classCallCheck(this, PopupHandler);\n\n    var url = _ref.url,\n        target = _ref.target,\n        features = _ref.features;\n    _this5 = _super2.call(this);\n\n    _defineProperty(_assertThisInitialized(_this5), \"url\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"target\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"features\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"windowTimer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"iClosedWindow\", void 0);\n\n    _this5.url = url;\n    _this5.target = target || \"_blank\";\n    _this5.features = features || getPopupFeatures();\n    _this5.window = undefined;\n    _this5.windowTimer = undefined;\n    _this5.iClosedWindow = false;\n\n    _this5._setupTimer();\n\n    return _this5;\n  }\n\n  _createClass(PopupHandler, [{\n    key: \"_setupTimer\",\n    value: function _setupTimer() {\n      var _this6 = this;\n\n      this.windowTimer = Number(setInterval(function () {\n        if (_this6.window && _this6.window.closed) {\n          clearInterval(_this6.windowTimer);\n\n          if (!_this6.iClosedWindow) {\n            _this6.emit(\"close\");\n          }\n\n          _this6.iClosedWindow = false;\n          _this6.window = undefined;\n        }\n\n        if (_this6.window === undefined) clearInterval(_this6.windowTimer);\n      }, 500));\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this$window;\n\n      this.window = window.open(this.url.href, this.target, this.features);\n      if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n      return Promise.resolve();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.iClosedWindow = true;\n      if (this.window) this.window.close();\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(locationReplaceOnRedirect) {\n      if (locationReplaceOnRedirect) {\n        window.location.replace(this.url.href);\n      } else {\n        window.location.href = this.url.href;\n      }\n    }\n  }]);\n\n  return PopupHandler;\n}(EventEmitter);\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\n\nfunction imgExists(url) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var img = document.createElement(\"img\");\n\n      img.onload = function () {\n        return resolve(true);\n      };\n\n      img.onerror = function () {\n        return resolve(false);\n      };\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nvar getSiteName = function getSiteName(window) {\n  var document = window.document;\n  var siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  var metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nfunction getSiteIcon(_x4) {\n  return _getSiteIcon.apply(this, arguments);\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nfunction _getSiteIcon() {\n  _getSiteIcon = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(window) {\n    var document, icon;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            document = window.document; // Use the site's favicon if it exists\n\n            icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n            _context14.t0 = icon;\n\n            if (!_context14.t0) {\n              _context14.next = 7;\n              break;\n            }\n\n            _context14.next = 6;\n            return imgExists(icon.href);\n\n          case 6:\n            _context14.t0 = _context14.sent;\n\n          case 7:\n            if (!_context14.t0) {\n              _context14.next = 9;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", icon.href);\n\n          case 9:\n            // Search through available icons in no particular order\n            icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(function (_icon) {\n              return Boolean(_icon.href);\n            });\n            _context14.t1 = icon;\n\n            if (!_context14.t1) {\n              _context14.next = 15;\n              break;\n            }\n\n            _context14.next = 14;\n            return imgExists(icon.href);\n\n          case 14:\n            _context14.t1 = _context14.sent;\n\n          case 15:\n            if (!_context14.t1) {\n              _context14.next = 17;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", icon.href);\n\n          case 17:\n            return _context14.abrupt(\"return\", null);\n\n          case 18:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getSiteIcon.apply(this, arguments);\n}\n\nvar getSiteMetadata = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.t0 = getSiteName(window);\n            _context4.next = 3;\n            return getSiteIcon(window);\n\n          case 3:\n            _context4.t1 = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              name: _context4.t0,\n              icon: _context4.t1\n            });\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getSiteMetadata() {\n    return _ref8.apply(this, arguments);\n  };\n}();\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nfunction sendSiteMetadata(_x5) {\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nfunction _sendSiteMetadata() {\n  _sendSiteMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(engine) {\n    var domainMetadata;\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            _context15.next = 3;\n            return getSiteMetadata();\n\n          case 3:\n            domainMetadata = _context15.sent;\n            // call engine.handle directly to avoid normal RPC request handling\n            engine.handle({\n              jsonrpc: \"2.0\",\n              id: getPreopenInstanceId(),\n              method: \"wallet_sendDomainMetadata\",\n              params: domainMetadata\n            }, NOOP);\n            _context15.next = 10;\n            break;\n\n          case 7:\n            _context15.prev = 7;\n            _context15.t0 = _context15[\"catch\"](0);\n            log.error({\n              message: messages.errors.sendSiteMetadata(),\n              originalError: _context15.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[0, 7]]);\n  }));\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nvar _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar defaultVerifiers = (_defaultVerifiers = {}, _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.GOOGLE, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.FACEBOOK, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.REDDIT, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.TWITCH, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.DISCORD, true), _defaultVerifiers);\nvar iframeIntegrity = \"sha384-zFtyGD1XuBBFsoWsWz86WRRQIVjvJ09NSSfLCRwpEjER3OOdUm93Q9aVddcJz/Al\";\nvar expectedCacheControlHeader = \"max-age=3600\";\nvar UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nvar isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(function () {\n  var _preLoadIframe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var torusIframeHtml, _yield$getTorusUrl, torusUrl;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!(typeof document === \"undefined\")) {\n              _context5.next = 3;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 3:\n            torusIframeHtml = document.createElement(\"link\");\n            _context5.next = 6;\n            return getTorusUrl(\"production\", {\n              check: false,\n              hash: iframeIntegrity,\n              version: \"\"\n            });\n\n          case 6:\n            _yield$getTorusUrl = _context5.sent;\n            torusUrl = _yield$getTorusUrl.torusUrl;\n            torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n            torusIframeHtml.crossOrigin = \"anonymous\";\n            torusIframeHtml.type = \"text/html\";\n            torusIframeHtml.rel = \"prefetch\";\n\n            if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n              if (torusIframeHtml.relList.supports(\"prefetch\")) {\n                document.head.appendChild(torusIframeHtml);\n              }\n            }\n\n            _context5.next = 18;\n            break;\n\n          case 15:\n            _context5.prev = 15;\n            _context5.t0 = _context5[\"catch\"](0);\n            log.warn(_context5.t0);\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 15]]);\n  }));\n\n  function preLoadIframe() {\n    return _preLoadIframe.apply(this, arguments);\n  }\n\n  return preLoadIframe;\n})()();\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus() {\n    _classCallCheck(this, Torus);\n\n    var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref9$buttonPosition = _ref9.buttonPosition,\n        buttonPosition = _ref9$buttonPosition === void 0 ? BUTTON_POSITION.BOTTOM_LEFT : _ref9$buttonPosition,\n        _ref9$modalZIndex = _ref9.modalZIndex,\n        modalZIndex = _ref9$modalZIndex === void 0 ? 99999 : _ref9$modalZIndex,\n        _ref9$apiKey = _ref9.apiKey,\n        apiKey = _ref9$apiKey === void 0 ? \"torus-default\" : _ref9$apiKey;\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  _createClass(Torus, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this7 = this;\n\n        var _ref10,\n            _ref10$buildEnv,\n            buildEnv,\n            _ref10$enableLogging,\n            enableLogging,\n            _ref10$enabledVerifie,\n            enabledVerifiers,\n            _ref10$network,\n            network,\n            _ref10$loginConfig,\n            loginConfig,\n            _ref10$showTorusButto,\n            showTorusButton,\n            _ref10$integrity,\n            integrity,\n            whiteLabel,\n            _ref10$skipTKey,\n            skipTKey,\n            _ref10$useLocalStorag,\n            useLocalStorage,\n            _ref10$useWalletConne,\n            useWalletConnect,\n            _yield$getTorusUrl2,\n            torusUrl,\n            logLevel,\n            dappStorageKey,\n            localStorageKey,\n            storedKey,\n            generatedKey,\n            torusIframeUrl,\n            link,\n            _ref11,\n            _ref11$defaultLanguag,\n            defaultLanguage,\n            _ref11$customTranslat,\n            customTranslations,\n            mergedTranslations,\n            languageTranslations,\n            handleSetup,\n            fetchUrl,\n            resp,\n            response,\n            calculatedIntegrity,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _ref10 = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {}, _ref10$buildEnv = _ref10.buildEnv, buildEnv = _ref10$buildEnv === void 0 ? TORUS_BUILD_ENV.PRODUCTION : _ref10$buildEnv, _ref10$enableLogging = _ref10.enableLogging, enableLogging = _ref10$enableLogging === void 0 ? false : _ref10$enableLogging, _ref10$enabledVerifie = _ref10.enabledVerifiers, enabledVerifiers = _ref10$enabledVerifie === void 0 ? defaultVerifiers : _ref10$enabledVerifie, _ref10$network = _ref10.network, network = _ref10$network === void 0 ? {\n                  host: \"mainnet\",\n                  chainId: null,\n                  networkName: \"\",\n                  blockExplorer: \"\",\n                  ticker: \"\",\n                  tickerName: \"\"\n                } : _ref10$network, _ref10$loginConfig = _ref10.loginConfig, loginConfig = _ref10$loginConfig === void 0 ? {} : _ref10$loginConfig, _ref10$showTorusButto = _ref10.showTorusButton, showTorusButton = _ref10$showTorusButto === void 0 ? true : _ref10$showTorusButto, _ref10$integrity = _ref10.integrity, integrity = _ref10$integrity === void 0 ? {\n                  check: false,\n                  hash: iframeIntegrity,\n                  version: \"\"\n                } : _ref10$integrity, whiteLabel = _ref10.whiteLabel, _ref10$skipTKey = _ref10.skipTKey, skipTKey = _ref10$skipTKey === void 0 ? false : _ref10$skipTKey, _ref10$useLocalStorag = _ref10.useLocalStorage, useLocalStorage = _ref10$useLocalStorag === void 0 ? false : _ref10$useLocalStorag, _ref10$useWalletConne = _ref10.useWalletConnect, useWalletConnect = _ref10$useWalletConne === void 0 ? false : _ref10$useWalletConne;\n\n                if (!this.isInitialized) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Already initialized\");\n\n              case 3:\n                _context8.next = 5;\n                return getTorusUrl(buildEnv, integrity);\n\n              case 5:\n                _yield$getTorusUrl2 = _context8.sent;\n                torusUrl = _yield$getTorusUrl2.torusUrl;\n                logLevel = _yield$getTorusUrl2.logLevel;\n                log.info(torusUrl, \"url loaded\");\n                this.torusUrl = torusUrl;\n                this.whiteLabel = whiteLabel;\n                this.useWalletConnect = useWalletConnect;\n                log.setDefaultLevel(logLevel);\n                if (enableLogging) log.enableAll();else log.disableAll();\n                this.torusWidgetVisibility = showTorusButton;\n                dappStorageKey = \"\";\n\n                if (isLocalStorageAvailable && useLocalStorage) {\n                  localStorageKey = \"\".concat(configuration.localStorageKeyPrefix).concat(window.location.hostname);\n                  storedKey = window.localStorage.getItem(localStorageKey);\n                  if (storedKey) dappStorageKey = storedKey;else {\n                    generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n                    window.localStorage.setItem(localStorageKey, generatedKey);\n                    dappStorageKey = generatedKey;\n                  }\n                }\n\n                this.dappStorageKey = dappStorageKey;\n                torusIframeUrl = new URL(torusUrl);\n                if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n                if (dappStorageKey) {\n                  torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n                } // Iframe code\n\n\n                this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n                this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n                this.torusAlertContainer.style.display = \"none\";\n                this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n                link = window.document.createElement(\"link\");\n                link.setAttribute(\"rel\", \"stylesheet\");\n                link.setAttribute(\"type\", \"text/css\");\n                link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n                this.styleLink = link;\n                _ref11 = this.whiteLabel || {}, _ref11$defaultLanguag = _ref11.defaultLanguage, defaultLanguage = _ref11$defaultLanguag === void 0 ? getUserLanguage() : _ref11$defaultLanguag, _ref11$customTranslat = _ref11.customTranslations, customTranslations = _ref11$customTranslat === void 0 ? {} : _ref11$customTranslat;\n                mergedTranslations = deepmerge(configuration.translations, customTranslations);\n                languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n                this.embedTranslations = languageTranslations.embed;\n\n                handleSetup = /*#__PURE__*/function () {\n                  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return documentReady();\n\n                          case 2:\n                            return _context7.abrupt(\"return\", new Promise(function (resolve, reject) {\n                              _this7.torusIframe.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                                var initStream;\n                                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                  while (1) {\n                                    switch (_context6.prev = _context6.next) {\n                                      case 0:\n                                        // only do this if iframe is not full screen\n                                        _this7._setupWeb3();\n\n                                        initStream = _this7.communicationMux.getStream(\"init_stream\");\n                                        initStream.on(\"data\", function (chunk) {\n                                          var name = chunk.name,\n                                              data = chunk.data,\n                                              error = chunk.error;\n\n                                          if (name === \"init_complete\" && data.success) {\n                                            // resolve promise\n                                            _this7.isInitialized = true;\n\n                                            _this7._displayIframe(_this7.isIframeFullScreen);\n\n                                            resolve(undefined);\n                                          } else if (error) {\n                                            reject(new Error(error));\n                                          }\n                                        });\n                                        initStream.write({\n                                          name: \"init_stream\",\n                                          data: {\n                                            enabledVerifiers: enabledVerifiers,\n                                            loginConfig: loginConfig,\n                                            whiteLabel: _this7.whiteLabel,\n                                            buttonPosition: _this7.buttonPosition,\n                                            torusWidgetVisibility: _this7.torusWidgetVisibility,\n                                            apiKey: _this7.apiKey,\n                                            skipTKey: skipTKey,\n                                            network: network\n                                          }\n                                        });\n\n                                      case 4:\n                                      case \"end\":\n                                        return _context6.stop();\n                                    }\n                                  }\n                                }, _callee6);\n                              }));\n                              window.document.head.appendChild(_this7.styleLink);\n                              window.document.body.appendChild(_this7.torusIframe);\n                              window.document.body.appendChild(_this7.torusAlertContainer);\n                            }));\n\n                          case 3:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }));\n\n                  return function handleSetup() {\n                    return _ref12.apply(this, arguments);\n                  };\n                }();\n\n                if (!(buildEnv === \"production\" && integrity.check)) {\n                  _context8.next = 56;\n                  break;\n                }\n\n                // hacky solution to check for iframe integrity\n                fetchUrl = \"\".concat(torusUrl, \"/popup\");\n                _context8.next = 39;\n                return fetch(fetchUrl, {\n                  cache: \"reload\"\n                });\n\n              case 39:\n                resp = _context8.sent;\n\n                if (!(resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader)) {\n                  _context8.next = 42;\n                  break;\n                }\n\n                throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n\n              case 42:\n                _context8.next = 44;\n                return resp.text();\n\n              case 44:\n                response = _context8.sent;\n                calculatedIntegrity = main({\n                  algorithms: [\"sha384\"]\n                }, response);\n                log.info(calculatedIntegrity, \"integrity\");\n\n                if (!(calculatedIntegrity === integrity.hash)) {\n                  _context8.next = 52;\n                  break;\n                }\n\n                _context8.next = 50;\n                return handleSetup();\n\n              case 50:\n                _context8.next = 54;\n                break;\n\n              case 52:\n                this.clearInit();\n                throw new Error(\"Integrity check failed\");\n\n              case 54:\n                _context8.next = 58;\n                break;\n\n              case 56:\n                _context8.next = 58;\n                return handleSetup();\n\n              case 58:\n                return _context8.abrupt(\"return\", undefined);\n\n              case 59:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref14$verifier = _ref14.verifier,\n          verifier = _ref14$verifier === void 0 ? \"\" : _ref14$verifier,\n          _ref14$login_hint = _ref14.login_hint,\n          loginHint = _ref14$login_hint === void 0 ? \"\" : _ref14$login_hint;\n\n      if (!this.isInitialized) throw new Error(\"Call init() first\");\n      this.requestedVerifier = verifier;\n      this.loginHint = loginHint;\n      return this.ethereum.enable();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this8.isLoggedIn) {\n          reject(new Error(\"User has not logged in yet\"));\n          return;\n        }\n\n        var logOutStream = _this8.communicationMux.getStream(\"logout\");\n\n        logOutStream.write({\n          name: \"logOut\"\n        });\n\n        var statusStream = _this8.communicationMux.getStream(\"status\");\n\n        var statusStreamHandler = function statusStreamHandler(status) {\n          if (!status.loggedIn) {\n            _this8.isLoggedIn = false;\n            _this8.currentVerifier = \"\";\n            _this8.requestedVerifier = \"\";\n            resolve();\n          } else reject(new Error(\"Some Error Occured\"));\n        };\n\n        handleStream(statusStream, \"data\", statusStreamHandler);\n      });\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function () {\n      var _cleanUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!this.isLoggedIn) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                _context9.next = 3;\n                return this.logout();\n\n              case 3:\n                this.clearInit();\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function cleanUp() {\n        return _cleanUp.apply(this, arguments);\n      }\n\n      return cleanUp;\n    }()\n  }, {\n    key: \"clearInit\",\n    value: function clearInit() {\n      function isElement(element) {\n        return element instanceof Element || element instanceof HTMLDocument;\n      }\n\n      if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n        this.styleLink.remove();\n        this.styleLink = undefined;\n      }\n\n      if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n        this.torusIframe.remove();\n        this.torusIframe = undefined;\n      }\n\n      if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n        this.torusAlert = undefined;\n        this.torusAlertContainer.remove();\n        this.torusAlertContainer = undefined;\n      }\n\n      this.isInitialized = false;\n    }\n  }, {\n    key: \"hideTorusButton\",\n    value: function hideTorusButton() {\n      this.torusWidgetVisibility = false;\n\n      this._sendWidgetVisibilityStatus(false);\n\n      this._displayIframe();\n    }\n  }, {\n    key: \"showTorusButton\",\n    value: function showTorusButton() {\n      this.torusWidgetVisibility = true;\n\n      this._sendWidgetVisibilityStatus(true);\n\n      this._displayIframe();\n    }\n  }, {\n    key: \"setProvider\",\n    value: function setProvider() {\n      var _this9 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _ref$host = _ref.host,\n          host = _ref$host === void 0 ? \"mainnet\" : _ref$host,\n          _ref$chainId = _ref.chainId,\n          chainId = _ref$chainId === void 0 ? null : _ref$chainId,\n          _ref$networkName = _ref.networkName,\n          networkName = _ref$networkName === void 0 ? \"\" : _ref$networkName,\n          rest = _objectWithoutProperties(_ref, _excluded);\n\n      return new Promise(function (resolve, reject) {\n        var providerChangeStream = _this9.communicationMux.getStream(\"provider_change\");\n\n        var handler = function handler(chunk) {\n          var _chunk$data = chunk.data,\n              err = _chunk$data.err,\n              success = _chunk$data.success;\n          log.info(chunk);\n\n          if (err) {\n            reject(err);\n          } else if (success) {\n            resolve();\n          } else reject(new Error(\"some error occured\"));\n        };\n\n        handleStream(providerChangeStream, \"data\", handler);\n        var preopenInstanceId = getPreopenInstanceId();\n\n        _this9._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_PROVIDER_CHANGE_WINDOW\n        });\n\n        providerChangeStream.write({\n          name: \"show_provider_change\",\n          data: {\n            network: _objectSpread({\n              host: host,\n              chainId: chainId,\n              networkName: networkName\n            }, rest),\n            preopenInstanceId: preopenInstanceId,\n            override: false\n          }\n        });\n      });\n    }\n  }, {\n    key: \"showWallet\",\n    value: function showWallet(path) {\n      var _this10 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n      var finalPath = path ? \"/\".concat(path) : \"\";\n      showWalletStream.write({\n        name: \"show_wallet\",\n        data: {\n          path: finalPath\n        }\n      });\n\n      var showWalletHandler = function showWalletHandler(chunk) {\n        if (chunk.name === \"show_wallet_instance\") {\n          // Let the error propogate up (hence, no try catch)\n          var instanceId = chunk.data.instanceId;\n          var finalUrl = new URL(\"\".concat(_this10.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n          finalUrl.searchParams.append(\"integrity\", \"true\");\n          finalUrl.searchParams.append(\"instanceId\", instanceId);\n          Object.keys(params).forEach(function (x) {\n            finalUrl.searchParams.append(x, params[x]);\n          });\n\n          if (_this10.dappStorageKey) {\n            finalUrl.hash = \"#dappStorageKey=\".concat(_this10.dappStorageKey);\n          }\n\n          var walletWindow = new PopupHandler({\n            url: finalUrl,\n            features: FEATURES_DEFAULT_WALLET_WINDOW\n          });\n          walletWindow.open();\n        }\n      };\n\n      handleStream(showWalletStream, \"data\", showWalletHandler);\n    }\n  }, {\n    key: \"getPublicAddress\",\n    value: function () {\n      var _getPublicAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(_ref2) {\n        var verifier, verifierId, _ref2$isExtended, isExtended, nodeDetails, endpoints, torusNodePubs, walletVerifier, openloginVerifier, existingV1User, v2User, newV2User;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                verifier = _ref2.verifier, verifierId = _ref2.verifierId, _ref2$isExtended = _ref2.isExtended, isExtended = _ref2$isExtended === void 0 ? false : _ref2$isExtended;\n\n                if (!(!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier])) {\n                  _context10.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Unsupported verifier\");\n\n              case 3:\n                _context10.next = 5;\n                return this.nodeDetailManager.getNodeDetails({\n                  verifier: verifier,\n                  verifierId: verifierId\n                });\n\n              case 5:\n                nodeDetails = _context10.sent;\n                endpoints = nodeDetails.torusNodeEndpoints;\n                torusNodePubs = nodeDetails.torusNodePub;\n                walletVerifier = verifier;\n                openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n                _context10.prev = 10;\n                _context10.next = 13;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: walletVerifier,\n                  verifierId: verifierId\n                });\n\n              case 13:\n                existingV1User = _context10.sent;\n\n                if (!(existingV1User.typeOfUser === \"v1\")) {\n                  _context10.next = 18;\n                  break;\n                }\n\n                if (isExtended) {\n                  _context10.next = 17;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", existingV1User.address);\n\n              case 17:\n                return _context10.abrupt(\"return\", existingV1User);\n\n              case 18:\n                _context10.next = 20;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: openloginVerifier,\n                  verifierId: verifierId\n                }, true);\n\n              case 20:\n                v2User = _context10.sent;\n\n                if (isExtended) {\n                  _context10.next = 23;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", v2User.address);\n\n              case 23:\n                return _context10.abrupt(\"return\", v2User);\n\n              case 26:\n                _context10.prev = 26;\n                _context10.t0 = _context10[\"catch\"](10);\n\n                if (!(_context10.t0 !== null && _context10.t0 !== void 0 && _context10.t0.message.includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context10.next = 35;\n                  break;\n                }\n\n                _context10.next = 31;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: openloginVerifier,\n                  verifierId: verifierId\n                }, true);\n\n              case 31:\n                newV2User = _context10.sent;\n\n                if (isExtended) {\n                  _context10.next = 34;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", newV2User.address);\n\n              case 34:\n                return _context10.abrupt(\"return\", newV2User);\n\n              case 35:\n                throw _context10.t0;\n\n              case 36:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[10, 26]]);\n      }));\n\n      function getPublicAddress(_x6) {\n        return _getPublicAddress.apply(this, arguments);\n      }\n\n      return getPublicAddress;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(message) {\n      var _this11 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this11.isLoggedIn) {\n          var userInfoAccessStream = _this11.communicationMux.getStream(\"user_info_access\");\n\n          userInfoAccessStream.write({\n            name: \"user_info_access_request\"\n          });\n\n          var userInfoAccessHandler = function userInfoAccessHandler(chunk) {\n            var name = chunk.name,\n                _chunk$data2 = chunk.data,\n                approved = _chunk$data2.approved,\n                payload = _chunk$data2.payload,\n                rejected = _chunk$data2.rejected,\n                newRequest = _chunk$data2.newRequest;\n\n            if (name === \"user_info_access_response\") {\n              if (approved) {\n                resolve(payload);\n              } else if (rejected) {\n                reject(new Error(\"User rejected the request\"));\n              } else if (newRequest) {\n                var userInfoStream = _this11.communicationMux.getStream(\"user_info\");\n\n                var userInfoHandler = function userInfoHandler(handlerChunk) {\n                  if (handlerChunk.name === \"user_info_response\") {\n                    if (handlerChunk.data.approved) {\n                      resolve(handlerChunk.data.payload);\n                    } else {\n                      reject(new Error(\"User rejected the request\"));\n                    }\n                  }\n                };\n\n                handleStream(userInfoStream, \"data\", userInfoHandler);\n                var preopenInstanceId = getPreopenInstanceId();\n\n                _this11._handleWindow(preopenInstanceId, {\n                  target: \"_blank\",\n                  features: FEATURES_PROVIDER_CHANGE_WINDOW\n                });\n\n                userInfoStream.write({\n                  name: \"user_info_request\",\n                  data: {\n                    message: message,\n                    preopenInstanceId: preopenInstanceId\n                  }\n                });\n              }\n            }\n          };\n\n          handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n        } else reject(new Error(\"User has not logged in yet\"));\n      });\n    }\n  }, {\n    key: \"initiateTopup\",\n    value: function initiateTopup(provider, params) {\n      var _this12 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this12.isInitialized) {\n          var _validatePaymentProvi = validatePaymentProvider(provider, params),\n              errors = _validatePaymentProvi.errors,\n              isValid = _validatePaymentProvi.isValid;\n\n          if (!isValid) {\n            reject(new Error(JSON.stringify(errors)));\n            return;\n          }\n\n          var topupStream = _this12.communicationMux.getStream(\"topup\");\n\n          var topupHandler = function topupHandler(chunk) {\n            if (chunk.name === \"topup_response\") {\n              if (chunk.data.success) {\n                resolve(chunk.data.success);\n              } else {\n                reject(new Error(chunk.data.error));\n              }\n            }\n          };\n\n          handleStream(topupStream, \"data\", topupHandler);\n          var preopenInstanceId = getPreopenInstanceId();\n\n          _this12._handleWindow(preopenInstanceId);\n\n          topupStream.write({\n            name: \"topup_request\",\n            data: {\n              provider: provider,\n              params: params,\n              preopenInstanceId: preopenInstanceId\n            }\n          });\n        } else reject(new Error(\"Torus is not initialized yet\"));\n      });\n    }\n  }, {\n    key: \"loginWithPrivateKey\",\n    value: function () {\n      var _loginWithPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(loginParams) {\n        var _this13 = this;\n\n        var privateKey, userInfo;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                privateKey = loginParams.privateKey, userInfo = loginParams.userInfo;\n                return _context11.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this13.isInitialized) {\n                    if (Buffer.from(privateKey, \"hex\").length !== 32) {\n                      reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n                      return;\n                    }\n\n                    var loginPrivKeyStream = _this13.communicationMux.getStream(\"login_with_private_key\");\n\n                    var loginHandler = function loginHandler(chunk) {\n                      if (chunk.name === \"login_with_private_key_response\") {\n                        if (chunk.data.success) {\n                          resolve(chunk.data.success);\n                        } else {\n                          reject(new Error(chunk.data.error));\n                        }\n                      }\n                    };\n\n                    handleStream(loginPrivKeyStream, \"data\", loginHandler);\n                    loginPrivKeyStream.write({\n                      name: \"login_with_private_key_request\",\n                      data: {\n                        privateKey: privateKey,\n                        userInfo: userInfo\n                      }\n                    });\n                  } else reject(new Error(\"Torus is not initialized yet\"));\n                }));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function loginWithPrivateKey(_x7) {\n        return _loginWithPrivateKey.apply(this, arguments);\n      }\n\n      return loginWithPrivateKey;\n    }()\n  }, {\n    key: \"showWalletConnectScanner\",\n    value: function () {\n      var _showWalletConnectScanner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var _this14 = this;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (this.useWalletConnect) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n\n              case 2:\n                return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this14.isLoggedIn) {\n                    var walletConnectStream = _this14.communicationMux.getStream(\"wallet_connect_stream\");\n\n                    var walletConnectHandler = function walletConnectHandler(chunk) {\n                      if (chunk.name === \"wallet_connect_stream_res\") {\n                        if (chunk.data.success) {\n                          resolve(chunk.data.success);\n                        } else {\n                          reject(new Error(chunk.data.error));\n                        }\n\n                        _this14._displayIframe();\n                      }\n                    };\n\n                    handleStream(walletConnectStream, \"data\", walletConnectHandler);\n                    walletConnectStream.write({\n                      name: \"wallet_connect_stream_req\"\n                    });\n\n                    _this14._displayIframe(true);\n                  } else reject(new Error(\"User has not logged in yet\"));\n                }));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function showWalletConnectScanner() {\n        return _showWalletConnectScanner.apply(this, arguments);\n      }\n\n      return showWalletConnectScanner;\n    }()\n  }, {\n    key: \"_handleWindow\",\n    value: function _handleWindow(preopenInstanceId) {\n      var _ref15 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          url = _ref15.url,\n          target = _ref15.target,\n          features = _ref15.features;\n\n      if (preopenInstanceId) {\n        var windowStream = this.communicationMux.getStream(\"window\");\n        var finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n        if (this.dappStorageKey) {\n          // If multiple instances, it returns the first one\n          if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        var handledWindow = new PopupHandler({\n          url: finalUrl,\n          target: target,\n          features: features\n        });\n        handledWindow.open();\n\n        if (!handledWindow.window) {\n          this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n          return;\n        }\n\n        windowStream.write({\n          name: \"opened_window\",\n          data: {\n            preopenInstanceId: preopenInstanceId\n          }\n        });\n\n        var closeHandler = function closeHandler(_ref3) {\n          var receivedId = _ref3.preopenInstanceId,\n              close = _ref3.close;\n\n          if (receivedId === preopenInstanceId && close) {\n            handledWindow.close();\n            windowStream.removeListener(\"data\", closeHandler);\n          }\n        };\n\n        windowStream.on(\"data\", closeHandler);\n        handledWindow.once(\"close\", function () {\n          windowStream.write({\n            data: {\n              preopenInstanceId: preopenInstanceId,\n              closed: true\n            }\n          });\n          windowStream.removeListener(\"data\", closeHandler);\n        });\n      }\n    }\n  }, {\n    key: \"_setEmbedWhiteLabel\",\n    value: function _setEmbedWhiteLabel(element) {\n      // Set whitelabel\n      var _ref16 = this.whiteLabel || {},\n          theme = _ref16.theme;\n\n      if (theme) {\n        var _theme$isDark = theme.isDark,\n            isDark = _theme$isDark === void 0 ? false : _theme$isDark,\n            _theme$colors = theme.colors,\n            colors = _theme$colors === void 0 ? {} : _theme$colors;\n        if (isDark) element.classList.add(\"torus-dark\");\n        if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n        if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n      }\n    }\n  }, {\n    key: \"_getLogoUrl\",\n    value: function _getLogoUrl() {\n      var _this$whiteLabel, _this$whiteLabel$them;\n\n      var logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n      if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n        var _this$whiteLabel2;\n\n        logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n      } else {\n        var _this$whiteLabel3;\n\n        logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n      }\n\n      return logoUrl;\n    }\n  }, {\n    key: \"_sendWidgetVisibilityStatus\",\n    value: function _sendWidgetVisibilityStatus(status) {\n      var torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n      torusWidgetVisibilityStream.write({\n        data: status\n      });\n    }\n  }, {\n    key: \"_displayIframe\",\n    value: function _displayIframe() {\n      var isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var style = {}; // set phase\n\n      if (!isFull) {\n        style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n        style.height = \"70px\";\n        style.width = \"70px\";\n\n        switch (this.buttonPosition) {\n          case BUTTON_POSITION.TOP_LEFT:\n            style.top = \"0px\";\n            style.left = \"0px\";\n            style.right = \"auto\";\n            style.bottom = \"auto\";\n            break;\n\n          case BUTTON_POSITION.TOP_RIGHT:\n            style.top = \"0px\";\n            style.right = \"0px\";\n            style.left = \"auto\";\n            style.bottom = \"auto\";\n            break;\n\n          case BUTTON_POSITION.BOTTOM_RIGHT:\n            style.bottom = \"0px\";\n            style.right = \"0px\";\n            style.top = \"auto\";\n            style.left = \"auto\";\n            break;\n\n          case BUTTON_POSITION.BOTTOM_LEFT:\n          default:\n            style.bottom = \"0px\";\n            style.left = \"0px\";\n            style.top = \"auto\";\n            style.right = \"auto\";\n            break;\n        }\n      } else {\n        style.display = \"block\";\n        style.width = \"100%\";\n        style.height = \"100%\";\n        style.top = \"0px\";\n        style.right = \"0px\";\n        style.left = \"0px\";\n        style.bottom = \"0px\";\n      }\n\n      Object.assign(this.torusIframe.style, style);\n      this.isIframeFullScreen = isFull;\n    }\n  }, {\n    key: \"_setupWeb3\",\n    value: function _setupWeb3() {\n      var _this15 = this;\n\n      log.info(\"setupWeb3 running\"); // setup background connection\n\n      var metamaskStream = new BasePostMessageStream({\n        name: \"embed_metamask\",\n        target: \"iframe_metamask\",\n        targetWindow: this.torusIframe.contentWindow,\n        targetOrigin: new URL(this.torusUrl).origin\n      }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n      // because the MetamaskInpageProvider also attempts to do so.\n      // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n      var communicationStream = new BasePostMessageStream({\n        name: \"embed_comm\",\n        target: \"iframe_comm\",\n        targetWindow: this.torusIframe.contentWindow,\n        targetOrigin: new URL(this.torusUrl).origin\n      }); // Backward compatibility with Gotchi :)\n      // window.metamaskStream = this.communicationStream\n      // compose the inpage provider\n\n      var inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n      var detectAccountRequestPrototypeModifier = function detectAccountRequestPrototypeModifier(m) {\n        var originalMethod = inpageProvider[m];\n\n        inpageProvider[m] = function providerFunc(method) {\n          if (method && method === \"eth_requestAccounts\") {\n            return inpageProvider.enable();\n          }\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          return originalMethod.apply(this, [method].concat(args));\n        };\n      };\n\n      detectAccountRequestPrototypeModifier(\"send\");\n      detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n      inpageProvider.enable = function () {\n        return new Promise(function (resolve, reject) {\n          // If user is already logged in, we assume they have given access to the website\n          inpageProvider.sendAsync({\n            jsonrpc: \"2.0\",\n            id: getPreopenInstanceId(),\n            method: \"eth_requestAccounts\",\n            params: []\n          }, function (err, response) {\n            var _ref17 = response || {},\n                res = _ref17.result;\n\n            if (err) {\n              setTimeout(function () {\n                reject(err);\n              }, 50);\n            } else if (Array.isArray(res) && res.length > 0) {\n              // If user is already rehydrated, resolve this\n              // else wait for something to be written to status stream\n              var handleLoginCb = function handleLoginCb() {\n                if (_this15.requestedVerifier !== \"\" && _this15.currentVerifier !== _this15.requestedVerifier) {\n                  var requestedVerifier = _this15.requestedVerifier; // eslint-disable-next-line promise/no-promise-in-callback\n\n                  _this15.logout() // eslint-disable-next-line promise/always-return\n                  .then(function (_) {\n                    _this15.requestedVerifier = requestedVerifier;\n\n                    _this15._showLoginPopup(true, resolve, reject);\n                  }).catch(function (error) {\n                    return reject(error);\n                  });\n                } else {\n                  resolve(res);\n                }\n              };\n\n              if (_this15.isLoggedIn) {\n                handleLoginCb();\n              } else {\n                _this15.isLoginCallback = handleLoginCb;\n              }\n            } else {\n              // set up listener for login\n              _this15._showLoginPopup(true, resolve, reject);\n            }\n          });\n        });\n      };\n\n      inpageProvider.tryPreopenHandle = function (payload, cb) {\n        var _payload = payload;\n\n        if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n          var preopenInstanceId = getPreopenInstanceId();\n\n          _this15._handleWindow(preopenInstanceId, {\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW\n          });\n\n          _payload.preopenInstanceId = preopenInstanceId;\n        }\n\n        inpageProvider._rpcEngine.handle(_payload, cb);\n      }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n      // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n      var proxiedInpageProvider = new Proxy(inpageProvider, {\n        // straight up lie that we deleted the property so that it doesnt\n        // throw an error in strict mode\n        deleteProperty: function deleteProperty() {\n          return true;\n        }\n      });\n      this.ethereum = proxiedInpageProvider;\n      var communicationMux = setupMultiplex(communicationStream);\n      this.communicationMux = communicationMux;\n      var windowStream = communicationMux.getStream(\"window\");\n      windowStream.on(\"data\", function (chunk) {\n        if (chunk.name === \"create_window\") {\n          // url is the url we need to open\n          // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n          _this15._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n        }\n      }); // show torus widget if button clicked\n\n      var widgetStream = communicationMux.getStream(\"widget\");\n      widgetStream.on(\"data\", function (chunk) {\n        var data = chunk.data;\n\n        _this15._displayIframe(data);\n      }); // Show torus button if wallet has been hydrated/detected\n\n      var statusStream = communicationMux.getStream(\"status\");\n      statusStream.on(\"data\", function (status) {\n        // login\n        if (status.loggedIn) {\n          _this15.isLoggedIn = status.loggedIn;\n          _this15.currentVerifier = status.verifier;\n        } // logout\n        else _this15._displayIframe();\n\n        if (_this15.isLoginCallback) {\n          _this15.isLoginCallback();\n\n          delete _this15.isLoginCallback;\n        }\n      });\n      this.provider = proxiedInpageProvider;\n      if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n      inpageProvider._initializeState();\n\n      log.debug(\"Torus - injected provider\");\n    }\n  }, {\n    key: \"_showLoginPopup\",\n    value: function _showLoginPopup(calledFromEmbed, resolve, reject) {\n      var _this16 = this;\n\n      var loginHandler = function loginHandler(data) {\n        var err = data.err,\n            selectedAddress = data.selectedAddress;\n\n        if (err) {\n          log.error(err);\n          if (reject) reject(err);\n        } // returns an array (cause accounts expects it)\n        else if (resolve) resolve([selectedAddress]);\n\n        if (_this16.isIframeFullScreen) _this16._displayIframe();\n      };\n\n      var oauthStream = this.communicationMux.getStream(\"oauth\");\n\n      if (!this.requestedVerifier) {\n        this._displayIframe(true);\n\n        handleStream(oauthStream, \"data\", loginHandler);\n        oauthStream.write({\n          name: \"oauth_modal\",\n          data: {\n            calledFromEmbed: calledFromEmbed\n          }\n        });\n      } else {\n        handleStream(oauthStream, \"data\", loginHandler);\n        var preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        oauthStream.write({\n          name: \"oauth\",\n          data: {\n            calledFromEmbed: calledFromEmbed,\n            verifier: this.requestedVerifier,\n            preopenInstanceId: preopenInstanceId,\n            login_hint: this.loginHint\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createPopupBlockAlert\",\n    value: function _createPopupBlockAlert(preopenInstanceId, url) {\n      var _this17 = this;\n\n      var logoUrl = this._getLogoUrl();\n\n      var torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n      var successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n      var btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n      btnContainer.appendChild(successAlert);\n      torusAlert.appendChild(btnContainer);\n\n      var bindOnLoad = function bindOnLoad() {\n        successAlert.addEventListener(\"click\", function () {\n          _this17._handleWindow(preopenInstanceId, {\n            url: url,\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW\n          });\n\n          torusAlert.remove();\n          if (_this17.torusAlertContainer.children.length === 0) _this17.torusAlertContainer.style.display = \"none\";\n        });\n      };\n\n      this._setEmbedWhiteLabel(torusAlert);\n\n      var attachOnLoad = function attachOnLoad() {\n        _this17.torusAlertContainer.style.display = \"block\";\n\n        _this17.torusAlertContainer.appendChild(torusAlert);\n      };\n\n      runOnLoad(attachOnLoad);\n      runOnLoad(bindOnLoad);\n    }\n  }]);\n\n  return Torus;\n}();\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, Torus as default };","map":null,"metadata":{},"sourceType":"module"}